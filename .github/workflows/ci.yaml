name: test
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:

  automerge-dependencies:
    runs-on: macos-14
    env:
      LOCAL_BUILD: true
      DEVELOPER_DIR: /Applications/Xcode_15.4.app
    concurrency:
      group: automerge-dependencies-${{ github.head_ref || github.run_id }}
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v4
      - name: Cache Automerge XCFramework and library
        id: cache-automerge
        uses: actions/cache@v4
        with:
          path: |
            automergeFFI.xcframework
            automergeFFI.xcframework.zip
            libuniffi_automerge.a
            libuniffi_automerge_threads.a
          key: automerge-dependencies-{{ hashFiles(AutomergeUniffi/automerge.swift) }}-{{ hashFiles(AutomergeUniffi/automergeFFI.h) }}-{{ hashFiles(rust/Cargo.lock) }}-{{ hashFiles(rust/src/doc.rs) }}
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: 1.81.0
          default: true
      - name: Select Xcode 15.4
        run: sudo xcode-select -s /Applications/Xcode_15.4.app
      - name: Build Automerge XCFramework and library
        if: steps.cache-automerge.outputs.cache-hit != 'true'
        run: ./scripts/build-xcframework.sh
      - name: Compress Automerge XCFramework
        if: steps.cache-automerge.outputs.cache-hit != 'true'
        run: ./scripts/compress-framework.sh
      - uses: actions/upload-artifact@v4
        if: steps.cache-automerge.outputs.cache-hit != 'true'
        with:
          name: libuniffi_automerge
          path: |
            libuniffi_automerge.a
            libuniffi_automerge_threads.a

  mac:
    runs-on: macos-14
    needs: automerge-dependencies
    steps:
      - uses: actions/checkout@v4
      - name: Select Xcode 15.4
        run: sudo xcode-select -s /Applications/Xcode_15.4.app
      - name: Restore Automerge XCFramework and library
        uses: actions/cache/restore@v4
        with:
          path: |
            automergeFFI.xcframework
            automergeFFI.xcframework.zip
            libuniffi_automerge.a
            libuniffi_automerge_threads.a
          key: automerge-dependencies-{{ hashFiles(AutomergeUniffi/automerge.swift) }}-{{ hashFiles(AutomergeUniffi/automergeFFI.h) }}-{{ hashFiles(rust/Cargo.lock) }}-{{ hashFiles(rust/src/doc.rs) }}
      - name: Get swift version
        run: swift --version
      - name: Swift tests
        run: |
          export LOCAL_BUILD=true
          swift test

  wasm:
    runs-on: ubuntu-latest
    needs: automerge-dependencies
    strategy:
      matrix:
        include:
          - toolchain: swift-DEVELOPMENT-SNAPSHOT-2024-10-08-a
            swift-sdk: swift-wasm-DEVELOPMENT-SNAPSHOT-2024-10-15-a
            checksum: 229cd9d3b0ed582c7ef7c3064888ad78764e4743b5a770df92554a94513f53fb
    steps:
      - uses: actions/checkout@v4
      - uses: bytecodealliance/actions/wasmtime/setup@v1
      - name: Restore Automerge XCFramework and library
        uses: actions/cache/restore@v4
        with:
          path: |
            automergeFFI.xcframework
            automergeFFI.xcframework.zip
            libuniffi_automerge.a
            libuniffi_automerge_threads.a
          key: automerge-dependencies-{{ hashFiles(AutomergeUniffi/automerge.swift) }}-{{ hashFiles(AutomergeUniffi/automergeFFI.h) }}-{{ hashFiles(rust/Cargo.lock) }}-{{ hashFiles(rust/src/doc.rs) }}
      - name: Cache Toolchain for WebAssembly
        id: cache-wasm-toolchain
        uses: actions/cache@v4
        with:
          path: /tmp/swift-toolchain.tar.gz
          key: wasm-toolchain-${{ matrix.checksum }}
      - name: Download Toolchain for WebAssembly
        if: steps.cache-wasm-toolchain.outputs.cache-hit != 'true'
        run: |
          SWIFT_TOOLCHAIN_TAG="${{ matrix.toolchain }}"
          set -ex
          curl -f -o /tmp/swift-toolchain.tar.gz "https://download.swift.org/development/ubuntu2204/$SWIFT_TOOLCHAIN_TAG/$SWIFT_TOOLCHAIN_TAG-ubuntu22.04.tar.gz"
      - name: Install Swift and Swift SDK for WebAssembly
        run: |
          PREFIX=/opt/swift
          SWIFT_SDK_TAG="${{ matrix.swift-sdk }}"
          set -ex
          sudo mkdir -p $PREFIX; sudo tar -xzf /tmp/swift-toolchain.tar.gz -C $PREFIX --strip-component 1
          $PREFIX/usr/bin/swift sdk install "https://github.com/swiftwasm/swift/releases/download/$SWIFT_SDK_TAG/$SWIFT_SDK_TAG-wasm32-unknown-wasi.artifactbundle.zip" --checksum ${{ matrix.checksum }}
          echo "$PREFIX/usr/bin" >> $GITHUB_PATH
      - name: Build tests
        run: swift build --swift-sdk wasm32-unknown-wasi --build-tests -Xlinker "`pwd`/libuniffi_automerge.a" -Xlinker -z -Xlinker stack-size=$((1024 * 1024))
      - name: Run tests
        run: wasmtime run --wasm max-wasm-stack=$((1024 * 1024)) --dir . .build/debug/AutomergePackageTests.wasm

  rustfmt:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: 1.81.0
          default: true
          components: rustfmt
      - name: Clippy
        run: ./scripts/ci/rustfmt.sh

  clippy:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: 1.81.0
          default: true
          components: clippy
      - name: Clippy
        run: ./scripts/ci/clippy.sh
