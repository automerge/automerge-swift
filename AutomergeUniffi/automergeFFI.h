// This file was autogenerated by some hot garbage in the `uniffi` crate.
// Trust me, you don't want to mess with it!

#pragma once

#include <stdbool.h>
#include <stdint.h>

// The following structs are used to implement the lowest level
// of the FFI, and thus useful to multiple uniffied crates.
// We ensure they are declared exactly once, with a header guard, UNIFFI_SHARED_H.
#ifdef UNIFFI_SHARED_H
    // We also try to prevent mixing versions of shared uniffi header structs.
    // If you add anything to the #else block, you must increment the version suffix in UNIFFI_SHARED_HEADER_V4
    #ifndef UNIFFI_SHARED_HEADER_V4
        #error Combining helper code from multiple versions of uniffi is not supported
    #endif // ndef UNIFFI_SHARED_HEADER_V4
#else
#define UNIFFI_SHARED_H
#define UNIFFI_SHARED_HEADER_V4
// ⚠️ Attention: If you change this #else block (ending in `#endif // def UNIFFI_SHARED_H`) you *must* ⚠️
// ⚠️ increment the version suffix in all instances of UNIFFI_SHARED_HEADER_V4 in this file.           ⚠️

typedef struct RustBuffer
{
    int32_t capacity;
    int32_t len;
    uint8_t *_Nullable data;
} RustBuffer;

typedef int32_t (*ForeignCallback)(uint64_t, int32_t, RustBuffer, RustBuffer *_Nonnull);

typedef struct ForeignBytes
{
    int32_t len;
    const uint8_t *_Nullable data;
} ForeignBytes;

// Error definitions
typedef struct RustCallStatus {
    int8_t code;
    RustBuffer errorBuf;
} RustCallStatus;

// ⚠️ Attention: If you change this #else block (ending in `#endif // def UNIFFI_SHARED_H`) you *must* ⚠️
// ⚠️ increment the version suffix in all instances of UNIFFI_SHARED_HEADER_V4 in this file.           ⚠️
#endif // def UNIFFI_SHARED_H

void ffi_automerge_9b9_SyncState_object_free(
      void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
    );
void*_Nonnull automerge_9b9_SyncState_new(
      
    RustCallStatus *_Nonnull out_status
    );
void*_Nonnull automerge_9b9_SyncState_decode(
      RustBuffer bytes,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer automerge_9b9_SyncState_encode(
      void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
    );
void automerge_9b9_SyncState_reset(
      void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer automerge_9b9_SyncState_their_heads(
      void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
    );
void ffi_automerge_9b9_Doc_object_free(
      void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
    );
void*_Nonnull automerge_9b9_Doc_new(
      
    RustCallStatus *_Nonnull out_status
    );
void*_Nonnull automerge_9b9_Doc_new_with_actor(
      RustBuffer actor,
    RustCallStatus *_Nonnull out_status
    );
void*_Nonnull automerge_9b9_Doc_load(
      RustBuffer bytes,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer automerge_9b9_Doc_actor_id(
      void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
    );
void automerge_9b9_Doc_set_actor(
      void*_Nonnull ptr,RustBuffer actor,
    RustCallStatus *_Nonnull out_status
    );
void*_Nonnull automerge_9b9_Doc_fork(
      void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
    );
void*_Nonnull automerge_9b9_Doc_fork_at(
      void*_Nonnull ptr,RustBuffer heads,
    RustCallStatus *_Nonnull out_status
    );
void automerge_9b9_Doc_put_in_map(
      void*_Nonnull ptr,RustBuffer obj,RustBuffer key,RustBuffer value,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer automerge_9b9_Doc_put_object_in_map(
      void*_Nonnull ptr,RustBuffer obj,RustBuffer key,RustBuffer obj_type,
    RustCallStatus *_Nonnull out_status
    );
void automerge_9b9_Doc_put_in_list(
      void*_Nonnull ptr,RustBuffer obj,uint64_t index,RustBuffer value,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer automerge_9b9_Doc_put_object_in_list(
      void*_Nonnull ptr,RustBuffer obj,uint64_t index,RustBuffer obj_type,
    RustCallStatus *_Nonnull out_status
    );
void automerge_9b9_Doc_insert_in_list(
      void*_Nonnull ptr,RustBuffer obj,uint64_t index,RustBuffer value,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer automerge_9b9_Doc_insert_object_in_list(
      void*_Nonnull ptr,RustBuffer obj,uint64_t index,RustBuffer obj_type,
    RustCallStatus *_Nonnull out_status
    );
void automerge_9b9_Doc_splice_text(
      void*_Nonnull ptr,RustBuffer obj,uint64_t start,uint64_t delete,RustBuffer chars,
    RustCallStatus *_Nonnull out_status
    );
void automerge_9b9_Doc_splice(
      void*_Nonnull ptr,RustBuffer obj,uint64_t start,uint64_t delete,RustBuffer values,
    RustCallStatus *_Nonnull out_status
    );
void automerge_9b9_Doc_delete_in_map(
      void*_Nonnull ptr,RustBuffer obj,RustBuffer key,
    RustCallStatus *_Nonnull out_status
    );
void automerge_9b9_Doc_delete_in_list(
      void*_Nonnull ptr,RustBuffer obj,uint64_t index,
    RustCallStatus *_Nonnull out_status
    );
void automerge_9b9_Doc_increment_in_map(
      void*_Nonnull ptr,RustBuffer obj,RustBuffer key,int64_t by,
    RustCallStatus *_Nonnull out_status
    );
void automerge_9b9_Doc_increment_in_list(
      void*_Nonnull ptr,RustBuffer obj,uint64_t index,int64_t by,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer automerge_9b9_Doc_get_in_map(
      void*_Nonnull ptr,RustBuffer obj,RustBuffer key,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer automerge_9b9_Doc_get_in_list(
      void*_Nonnull ptr,RustBuffer obj,uint64_t index,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer automerge_9b9_Doc_get_at_in_map(
      void*_Nonnull ptr,RustBuffer obj,RustBuffer key,RustBuffer heads,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer automerge_9b9_Doc_get_at_in_list(
      void*_Nonnull ptr,RustBuffer obj,uint64_t index,RustBuffer heads,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer automerge_9b9_Doc_get_all_in_map(
      void*_Nonnull ptr,RustBuffer obj,RustBuffer key,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer automerge_9b9_Doc_get_all_in_list(
      void*_Nonnull ptr,RustBuffer obj,uint64_t index,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer automerge_9b9_Doc_get_all_at_in_map(
      void*_Nonnull ptr,RustBuffer obj,RustBuffer key,RustBuffer heads,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer automerge_9b9_Doc_get_all_at_in_list(
      void*_Nonnull ptr,RustBuffer obj,uint64_t index,RustBuffer heads,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer automerge_9b9_Doc_text(
      void*_Nonnull ptr,RustBuffer obj,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer automerge_9b9_Doc_text_at(
      void*_Nonnull ptr,RustBuffer obj,RustBuffer heads,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer automerge_9b9_Doc_map_keys(
      void*_Nonnull ptr,RustBuffer obj,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer automerge_9b9_Doc_map_keys_at(
      void*_Nonnull ptr,RustBuffer obj,RustBuffer heads,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer automerge_9b9_Doc_map_entries(
      void*_Nonnull ptr,RustBuffer obj,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer automerge_9b9_Doc_map_entries_at(
      void*_Nonnull ptr,RustBuffer obj,RustBuffer heads,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer automerge_9b9_Doc_values(
      void*_Nonnull ptr,RustBuffer obj,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer automerge_9b9_Doc_values_at(
      void*_Nonnull ptr,RustBuffer obj,RustBuffer heads,
    RustCallStatus *_Nonnull out_status
    );
uint64_t automerge_9b9_Doc_length(
      void*_Nonnull ptr,RustBuffer obj,
    RustCallStatus *_Nonnull out_status
    );
uint64_t automerge_9b9_Doc_length_at(
      void*_Nonnull ptr,RustBuffer obj,RustBuffer heads,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer automerge_9b9_Doc_object_type(
      void*_Nonnull ptr,RustBuffer obj,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer automerge_9b9_Doc_path(
      void*_Nonnull ptr,RustBuffer obj,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer automerge_9b9_Doc_heads(
      void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer automerge_9b9_Doc_save(
      void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
    );
void automerge_9b9_Doc_merge(
      void*_Nonnull ptr,void*_Nonnull other,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer automerge_9b9_Doc_merge_with_patches(
      void*_Nonnull ptr,void*_Nonnull other,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer automerge_9b9_Doc_generate_sync_message(
      void*_Nonnull ptr,void*_Nonnull state,
    RustCallStatus *_Nonnull out_status
    );
void automerge_9b9_Doc_receive_sync_message(
      void*_Nonnull ptr,void*_Nonnull state,RustBuffer msg,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer automerge_9b9_Doc_receive_sync_message_with_patches(
      void*_Nonnull ptr,void*_Nonnull state,RustBuffer msg,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer automerge_9b9_Doc_encode_new_changes(
      void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer automerge_9b9_Doc_encode_changes_since(
      void*_Nonnull ptr,RustBuffer heads,
    RustCallStatus *_Nonnull out_status
    );
void automerge_9b9_Doc_apply_encoded_changes(
      void*_Nonnull ptr,RustBuffer changes,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer automerge_9b9_Doc_apply_encoded_changes_with_patches(
      void*_Nonnull ptr,RustBuffer changes,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer automerge_9b9_root(
      
    RustCallStatus *_Nonnull out_status
    );
RustBuffer ffi_automerge_9b9_rustbuffer_alloc(
      int32_t size,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer ffi_automerge_9b9_rustbuffer_from_bytes(
      ForeignBytes bytes,
    RustCallStatus *_Nonnull out_status
    );
void ffi_automerge_9b9_rustbuffer_free(
      RustBuffer buf,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer ffi_automerge_9b9_rustbuffer_reserve(
      RustBuffer buf,int32_t additional,
    RustCallStatus *_Nonnull out_status
    );
