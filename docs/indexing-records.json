[
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/CodingKeyLookupError\/PathExtendsThroughText(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The path provided extends through Automerge Text, a leaf node in the schema. ",
    "summary" : "The path provided extends through Automerge Text, a leaf node in the schema.",
    "title" : "CodingKeyLookupError.PathExtendsThroughText(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AutomergeText\/!=(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.!=(_:_:). ",
    "summary" : "Inherited from Equatable.!=(_:_:).",
    "title" : "!=(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/ObjType\/!=(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.!=(_:_:). ",
    "summary" : "Inherited from Equatable.!=(_:_:).",
    "title" : "!=(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/LogVerbosity\/RawRepresentable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "RawRepresentable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/length(obj:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.length(obj:). ",
    "summary" : "Inherited from DocProtocol.length(obj:).",
    "title" : "length(obj:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/SyncState\/init()"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "init()"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeChange\/write(_:into:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.write(_:into:). ",
    "summary" : "Inherited from FfiConverter.write(_:into:).",
    "title" : "write(_:into:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/KeyValue\/key"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "key"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/KeyValue\/hash(into:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Hashable.hash(into:). ",
    "summary" : "Inherited from Hashable.hash(into:).",
    "title" : "hash(into:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AnyCodingKey\/stringValue"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The string value for this schema path element. ",
    "summary" : "The string value for this schema path element.",
    "title" : "stringValue"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/text(obj:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.text(obj:). ",
    "summary" : "Inherited from DocProtocol.text(obj:).",
    "title" : "text(obj:)"
  },
  {
    "headings" : [
      "Return Value"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/getHistory()"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns an list of change hashes that represent the causal sequence of changes to the document.  Return Value An array of ChangeHash that represents the sequence of change hashes in the document.",
    "summary" : "Returns an list of change hashes that represent the causal sequence of changes to the document.",
    "title" : "getHistory()"
  },
  {
    "headings" : [
      "Return Value",
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/lookupPath(path:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Looks up the objectId represented by the schema path string you provide.  A string representation of the location within an Automerge document. Return Value The objectId at the schema location you provide, or nil if the path is valid and no object exists in the document. Discussion The method throws errors when used with an invalid path.",
    "summary" : "Looks up the objectId represented by the schema path string you provide.",
    "title" : "lookupPath(path:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ChangeHash\/!=(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.!=(_:_:). ",
    "summary" : "Inherited from Equatable.!=(_:_:).",
    "title" : "!=(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AutomergeEncoder\/init(doc:strategy:cautiousWrite:reportingLoglevel:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Creates a new encoder that can store types into an Automerge document.  An instance of the document to store data into. The strategy to use when encoding types into an Automerge document. The default value is SchemaStrategy.createWhenNeeded. A Boolean value defaulting to false that indicates whether to verify existing value types match the type being encoded. The level of information that the encoder writes to the unified logging system. The default value is LogVerbosity.errorOnly.",
    "summary" : "Creates a new encoder that can store types into an Automerge document.",
    "title" : "init(doc:strategy:cautiousWrite:reportingLoglevel:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/UIntScalarConversionError\/LocalizedError-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "LocalizedError Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/PatchAction"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "PatchAction"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AnyCodingKey\/init(_:)-6lrn3"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Creates a generalized Coding Key from an Automerge Property.  The Automerge property to convert.",
    "summary" : "Creates a generalized Coding Key from an Automerge Property.",
    "title" : "init(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeScalarValue"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypeScalarValue"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/ExpandMark\/before"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "ExpandMark.before"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Counter\/Hashable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Hashable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/UIntScalarConversionError\/localizedDescription"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from Error.localizedDescription. ",
    "summary" : "Inherited from Error.localizedDescription.",
    "title" : "localizedDescription"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocError\/WrongObjectType(message:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "DocError.WrongObjectType(message:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/BindingError\/helpAnchor"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from LocalizedError.helpAnchor. ",
    "summary" : "Inherited from LocalizedError.helpAnchor.",
    "title" : "helpAnchor"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/PatchAction\/insert(obj:index:values:marks:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "PatchAction.insert(obj:index:values:marks:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "AutomergeUniffi"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ScalarValue\/Bytes(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A byte buffer. ",
    "summary" : "A byte buffer.",
    "title" : "ScalarValue.Bytes(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/ActorId"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Typealias from the type name used in the UDL file to the builtin type.  This is needed because the UDL type name is used in function\/method signatures. ",
    "summary" : "Typealias from the type name used in the UDL file to the builtin type.  This is needed because the UDL type name is used in function\/method signatures.",
    "title" : "ActorId"
  },
  {
    "headings" : [
      "Return Value",
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/applyEncodedChangesWithPatches(encoded:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Apply encoded changes to this document, returning patches that represent the changes made to the document.  The encoded changes to apply. Return Value An array of Patch that represent the changes applied. Discussion The input to this function can be anything returned by save(), encodeNewChanges(), encodeChangesSince(heads:) or any concatenation of those.",
    "summary" : "Apply encoded changes to this document, returning patches that represent the changes made to the document.",
    "title" : "applyEncodedChangesWithPatches(encoded:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypePathElement\/read(from:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.read(from:). ",
    "summary" : "Inherited from FfiConverter.read(from:).",
    "title" : "read(from:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeObjId_lift(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypeObjId_lift(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/LogVerbosity\/errorOnly"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Log errors only. ",
    "summary" : "Log errors only.",
    "title" : "LogVerbosity.errorOnly"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AutomergeText\/textBinding()"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns a binding to the string value of a text object within an Automerge document. ",
    "summary" : "Returns a binding to the string value of a text object within an Automerge document.",
    "title" : "textBinding()"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/PatchAction\/!=(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.!=(_:_:). ",
    "summary" : "Inherited from Equatable.!=(_:_:).",
    "title" : "!=(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocError\/!=(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.!=(_:_:). ",
    "summary" : "Inherited from Equatable.!=(_:_:).",
    "title" : "!=(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeKeyValue_lift(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypeKeyValue_lift(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/BindingError\/Equatable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Equatable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/PathElement\/obj"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "obj"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Mark"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "Mark"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Counter\/bind(doc:path:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Binds a text reference instance info an Automerge document.  The Automerge document associated with this reference. A string path that represents a Text container within the Automerge document. Discussion If the instance has an initial value other than an empty string, binding update the string within the Automerge document.",
    "summary" : "Binds a text reference instance info an Automerge document.",
    "title" : "bind(doc:path:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Mark\/name"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "name"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/BooleanScalarConversionError\/LocalizedError-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "LocalizedError Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypePatchAction\/write(_:into:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.write(_:into:). ",
    "summary" : "Inherited from FfiConverter.write(_:into:).",
    "title" : "write(_:into:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/KeyValue\/Hashable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Hashable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Change"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A type that encapsulates a change, and any associated metadata, to an Automerge document. ",
    "summary" : "A type that encapsulates a change, and any associated metadata, to an Automerge document.",
    "title" : "Change"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypePathElement_lower(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypePathElement_lower(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/LogVerbosity\/hashValue"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from RawRepresentable.hashValue. ",
    "summary" : "Inherited from RawRepresentable.hashValue.",
    "title" : "hashValue"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/BindingError\/NotCounter"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The Automerge object at the path and key\/index provided was not a Counter. ",
    "summary" : "The Automerge object at the path and key\/index provided was not a Counter.",
    "title" : "BindingError.NotCounter"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/DocError\/errorDescription"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from LocalizedError.errorDescription. ",
    "summary" : "Inherited from LocalizedError.errorDescription.",
    "title" : "errorDescription"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeObjType"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypeObjType"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/delete(obj:key:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Deletes the key you provide, and its associated value or object, from the dictionary object you specify.  The identifier of the dictionary to update. The key to delete.",
    "summary" : "Deletes the key you provide, and its associated value or object, from the dictionary object you specify.",
    "title" : "delete(obj:key:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ScalarValue\/CustomStringConvertible-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "CustomStringConvertible Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/getAllAtInList(obj:index:heads:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.getAllAtInList(obj:index:heads:). ",
    "summary" : "Inherited from DocProtocol.getAllAtInList(obj:index:heads:).",
    "title" : "getAllAtInList(obj:index:heads:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ObjType\/!=(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.!=(_:_:). ",
    "summary" : "Inherited from Equatable.!=(_:_:).",
    "title" : "!=(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Patch\/action"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "action"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/BindingError\/LocalizedError-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "LocalizedError Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ScalarValue\/Counter(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "An integer counter. ",
    "summary" : "An integer counter.",
    "title" : "ScalarValue.Counter(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/PatchAction"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The type of change the library applied to an Automerge document, along with the data that changed. ",
    "summary" : "The type of change the library applied to an Automerge document, along with the data that changed.",
    "title" : "PatchAction"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ScalarValueRepresentable\/ConvertError"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The error type associated with failed attempted conversion into or out of Automerge representation. ",
    "summary" : "The error type associated with failed attempted conversion into or out of Automerge representation.",
    "title" : "ConvertError"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypePatchAction_lift(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypePatchAction_lift(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/FloatingPointScalarConversionError\/LocalizedError-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "LocalizedError Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/SchemaStrategy"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A type that represents the encoder strategy to establish or error on differences in existing Automerge documents as compared to expected encoding. ",
    "summary" : "A type that represents the encoder strategy to establish or error on differences in existing Automerge documents as compared to expected encoding.",
    "title" : "SchemaStrategy"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Counter\/description"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A string representation of the value of the counter. ",
    "summary" : "A string representation of the value of the counter.",
    "title" : "description"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Value\/CustomDebugStringConvertible-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "CustomDebugStringConvertible Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/ReceiveSyncError\/InvalidMessage(message:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "ReceiveSyncError.InvalidMessage(message:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Mark\/end"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The distance from the start of the string in unicode scalars where the function ends the mark. ",
    "summary" : "The distance from the start of the string in unicode scalars where the function ends the mark.",
    "title" : "end"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AnyCodingKey\/init(_:)-6faed"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Creates a new schema path element for an un-keyed container using the index you provide.  The index position for an un-keyed container.",
    "summary" : "Creates a new schema path element for an un-keyed container using the index you provide.",
    "title" : "init(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeProp_lift(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypeProp_lift(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/PathElement\/init(obj:prop:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Creates a new path element.  The object Id of the path element. The property on the object, either a key on a map, or index position in a list.",
    "summary" : "Creates a new path element.",
    "title" : "init(obj:prop:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/marks(obj:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "marks(obj:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeChangeHash\/lower(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.lower(_:). ",
    "summary" : "Inherited from FfiConverter.lower(_:).",
    "title" : "lower(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/encodeChangesSince(heads:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.encodeChangesSince(heads:). ",
    "summary" : "Inherited from DocProtocol.encodeChangesSince(heads:).",
    "title" : "encodeChangesSince(heads:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/PathElement\/!=(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.!=(_:_:). ",
    "summary" : "Inherited from Equatable.!=(_:_:).",
    "title" : "!=(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/CodingKeyLookupError\/localizedDescription"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from Error.localizedDescription. ",
    "summary" : "Inherited from Error.localizedDescription.",
    "title" : "localizedDescription"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ScalarValue\/!=(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.!=(_:_:). ",
    "summary" : "Inherited from Equatable.!=(_:_:).",
    "title" : "!=(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Mark\/Hashable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Hashable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/PatchAction\/conflict(obj:prop:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "PatchAction.conflict(obj:prop:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeDocError\/write(_:into:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.write(_:into:). ",
    "summary" : "Inherited from FfiConverter.write(_:into:).",
    "title" : "write(_:into:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeObjType\/read(from:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.read(from:). ",
    "summary" : "Inherited from FfiConverter.read(from:).",
    "title" : "read(from:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/getAtInMap(obj:key:heads:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.getAtInMap(obj:key:heads:). ",
    "summary" : "Inherited from DocProtocol.getAtInMap(obj:key:heads:).",
    "title" : "getAtInMap(obj:key:heads:)"
  },
  {
    "headings" : [
      "Overview",
      "Using the Encoder\/Decoder",
      "Tradeoffs between the core API and using Codable to interact with Automerge",
      "Reading and Writing Codable Types",
      "Collaborating with Text",
      "Collaborating with Text",
      "Converting Scalar Values to Local Types",
      "Codable Errors"
    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/MappingData"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Conveniently read or write Codable types in Automerge documents. Overview A type that conforms to the Codable protocol can be stored and retrieved from a Document using AutomergeEncoder and AutomergeDecoder. This pair of classes creates and validates schema within your Document, as well as store and load the content into your Codable types. The following snippet creates a new Automerge document, and an encoder to write into that document:  A new document is empty, containing no data or schema. When you encode into the document, the default behavior establishes a document model that matches the codable representation of your type. If the document already has a document model encoded within it, and it doesn’t match the type you encode or decode, the encoder or decoder throws an error. The following example uses the encoder created above to encode a simple struct the document:  The matching AutomergeDecoder lets you decode from an Automerge document:  Using the Encoder\/Decoder When you use the AutomergeEncoder or AutomergeDecoder, they convert your types and stored properties into either objects or the closest equivalent Automerge primitive type. For a list of the primitive data types that Automerge supports, see Using the dynamic schema and core data model. While the Automerge schema is dynamic, Swift types don’t support mixing different types within arrays or dictionaries. The encoder and decoder follows the conventions for Swift types, and throws errors if the current schema doesn’t match when you use the encoder or decoder. For example, an Automerge document with a list of mixed Integers and Strings would not be decodable by AutomergeDecoder, although it is a valid Automerge document. The Automerge internal representation of Date is represented by a seconds timestamp. When you use the encoder to write a Date value, the Swift representation is converted to Automerge’s internal type, which is number of seconds since 1970 in UTC. Swift’s Date represents timestamps as Double, as such there is some loss of granularity (sub-seconds are lost) when writing into Automerge and reading a value back out. Be aware that because of this loss, Date values may not be directly equatable because of this difference. This library provides two reference types for concurrently updated values: AutomergeText and Counter: AutomergeText is a class that presents a concurrently updated String. AutomergeText maintains a reference to a document, the text’s location in the document schema, presents values from Automerge directly, and writes updates directly into the Automerge document. Counter is a class that represents a concurrently updated counter. It’s important to note that Automerge is a cross platform library, and the Automerge document schema is dynamic. Although not supported by Swift arrays, an Automerge array or dictionary can contain any other kind of Automerge object or primitive within it. When you merge another Automerge document, apply updates from an Automerge, or sync with another document, those updates can change not only the values, but also the schema of the Automerge document. This can potentially make the document invalid for the Swift types you define when you use AutomergeDecoder. Tradeoffs between the core API and using Codable to interact with Automerge Using AutomergeEncoder and AutomergeDecoder is easy, but is not always efficient. When you write into an Automerge document using the encoder, the Codable protocol recursively iterates through all of the stored properties and types, updating the Automerge document in an equivalent schema location. This process is not necessarily fast, and the speed can be noticeable, or actively detrimental, if you are making (or receiving) rapid updates, encoding or decoding lots of data, or both. If performance is an issue, you may find it useful to create your own classes that proxy into Automerge, so that small changes in your data model doesn’t require iterating through everything. See Using the dynamic schema and core data model for details on the core Automerge API and the low level types and the methods in Document for reading and writing into the data model directly. Reading and Writing Codable Types AutomergeEncoder AutomergeDecoder SchemaStrategy LogVerbosity AnyCodingKey Collaborating with Text AutomergeText Collaborating with Text Counter Converting Scalar Values to Local Types ScalarValueRepresentable Codable Errors CodingKeyLookupError PathParseError BindingError",
    "summary" : "Conveniently read or write Codable types in Automerge documents.",
    "title" : "Storing and loading your types in Automerge documents"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/ScalarValue\/int(value:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "ScalarValue.int(value:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/incrementInList(obj:index:by:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.incrementInList(obj:index:by:). ",
    "summary" : "Inherited from DocProtocol.incrementInList(obj:index:by:).",
    "title" : "incrementInList(obj:index:by:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/ExpandMark"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "ExpandMark"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/ReceiveSyncError\/Error-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Error Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypePatch"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypePatch"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/objectType(obj:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.objectType(obj:). ",
    "summary" : "Inherited from DocProtocol.objectType(obj:).",
    "title" : "objectType(obj:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Counter\/init(doc:objId:key:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Creates a new Counter reference instance bound within an Automerge document.  The Automerge document associated with this reference. A string path that represents the object that contains a Value within the Automerge document. The key (index position or dictionary key) on the objId provided.",
    "summary" : "Creates a new Counter reference instance bound within an Automerge document.",
    "title" : "init(doc:objId:key:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/UIntScalarConversionError"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A failure to convert an Automerge scalar value to or from an unsigned integer representation. ",
    "summary" : "A failure to convert an Automerge scalar value to or from an unsigned integer representation.",
    "title" : "UIntScalarConversionError"
  },
  {
    "headings" : [
      "Return Value",
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/generateSyncMessage(state:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Update the sync state you provide and return a sync message to send to a peer.  The instance of SyncState that represents the peer you’re syncing with. Return Value A message to send to the peer, or nil if the Automerge documents are in sync. Discussion Generate a new SyncState instance to start a new sync protocol session with a peer. The sync state maintains the knowledge of this peer and the peer you are syncing with. Use receiveSyncMessage(state:message:) to update the sync state with the state, and possibly changes, from the peer.",
    "summary" : "Update the sync state you provide and return a sync message to send to a peer.",
    "title" : "generateSyncMessage(state:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Prop"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "Prop"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/StringScalarConversionError"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A failure to convert an Automerge scalar value to or from a String representation. ",
    "summary" : "A failure to convert an Automerge scalar value to or from a String representation.",
    "title" : "StringScalarConversionError"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Prop\/Key(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A property in a map. ",
    "summary" : "A property in a map.",
    "title" : "Prop.Key(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Patch\/Equatable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Equatable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/commitWith(msg:time:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "commitWith(msg:time:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/valuesAt(obj:heads:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.valuesAt(obj:heads:). ",
    "summary" : "Inherited from DocProtocol.valuesAt(obj:heads:).",
    "title" : "valuesAt(obj:heads:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ChangeHash\/debugDescription"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The hex value of the change hash. ",
    "summary" : "The hex value of the change hash.",
    "title" : "debugDescription"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/mapKeys(obj:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.mapKeys(obj:). ",
    "summary" : "Inherited from DocProtocol.mapKeys(obj:).",
    "title" : "mapKeys(obj:)"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ObjType\/Text"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A type that represents an array of unicode characters.  Discussion This type is frequently correlated with the AutomergeText class, which provides a convenient read\/write interface to the encapsulated String. Automerge text types always represent a String, internally represented as an array of UTF-8 characters.",
    "summary" : "A type that represents an array of unicode characters.",
    "title" : "ObjType.Text"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/StringScalarConversionError\/failureReason"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A localized message describing the reason for the failure. ",
    "summary" : "A localized message describing the reason for the failure.",
    "title" : "failureReason"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/getAllAtInMap(obj:key:heads:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "getAllAtInMap(obj:key:heads:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/BooleanScalarConversionError\/failureReason"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A localized message describing the reason for the failure. ",
    "summary" : "A localized message describing the reason for the failure.",
    "title" : "failureReason"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeReceiveSyncError"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypeReceiveSyncError"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/actorId()"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.actorId(). ",
    "summary" : "Inherited from DocProtocol.actorId().",
    "title" : "actorId()"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypePatch_lift(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypePatch_lift(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/FloatingPointScalarConversionError\/helpAnchor"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from LocalizedError.helpAnchor. ",
    "summary" : "Inherited from LocalizedError.helpAnchor.",
    "title" : "helpAnchor"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/BytesScalarConversionError\/notbytesValue(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "BytesScalarConversionError.notbytesValue(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/values(obj:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.values(obj:). ",
    "summary" : "Inherited from DocProtocol.values(obj:).",
    "title" : "values(obj:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Change\/!=(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.!=(_:_:). ",
    "summary" : "Inherited from Equatable.!=(_:_:).",
    "title" : "!=(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/BytesScalarConversionError\/notbytesScalarValue(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "BytesScalarConversionError.notbytesScalarValue(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AutomergeText\/init(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Creates a new, unbound text reference instance.  An initial string value for the text reference.",
    "summary" : "Creates a new, unbound text reference instance.",
    "title" : "init(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Counter\/ObservableObject-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "ObservableObject Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/path(obj:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.path(obj:). ",
    "summary" : "Inherited from DocProtocol.path(obj:).",
    "title" : "path(obj:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/receiveSyncMessageWithPatches(state:msg:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "receiveSyncMessageWithPatches(state:msg:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/splice(obj:start:delete:values:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.splice(obj:start:delete:values:). ",
    "summary" : "Inherited from DocProtocol.splice(obj:start:delete:values:).",
    "title" : "splice(obj:start:delete:values:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/PathElement\/Equatable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Equatable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/CodingKeyLookupError\/UnexpectedLookupFailure(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "An error that represents a coding container was unable to look up a relevant Automerge objectId and was unable to capture a more specific error. ",
    "summary" : "An error that represents a coding container was unable to look up a relevant Automerge objectId and was unable to capture a more specific error.",
    "title" : "CodingKeyLookupError.UnexpectedLookupFailure(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/LoadError\/Error-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Error Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ObjType\/Equatable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Equatable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Change\/timestamp"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The timestamp of the change. ",
    "summary" : "The timestamp of the change.",
    "title" : "timestamp"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/objectType(obj:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns the object type for the object Id that you provide.  The identifier of an array, dictionary, or text object.",
    "summary" : "Returns the object type for the object Id that you provide.",
    "title" : "objectType(obj:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocError\/Error-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Error Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Change\/bytes"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "bytes"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/DeleteSeq\/!=(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.!=(_:_:). ",
    "summary" : "Inherited from Equatable.!=(_:_:).",
    "title" : "!=(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AutomergeText\/init(doc:objId:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "init(doc:objId:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/actor"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The actor ID of this document ",
    "summary" : "The actor ID of this document",
    "title" : "actor"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/LogVerbosity\/Equatable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Equatable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/ReceiveSyncError\/!=(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.!=(_:_:). ",
    "summary" : "Inherited from Equatable.!=(_:_:).",
    "title" : "!=(_:_:)"
  },
  {
    "headings" : [
      "Overview"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AutomergeEncoder"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "An encoder that stores types that conform to the codable protocol into an Automerge document.  Overview Use AutomergeEncoder to encode your data into an Automerge document. The following example illustrates encoding ColorList, a type that conforms to Codable, into an Automerge document: ",
    "summary" : "An encoder that stores types that conform to the codable protocol into an Automerge document.",
    "title" : "AutomergeEncoder"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeProp_lower(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypeProp_lower(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Change\/hash"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "hash"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeDecodeSyncStateError\/write(_:into:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.write(_:into:). ",
    "summary" : "Inherited from FfiConverter.write(_:into:).",
    "title" : "write(_:into:)"
  },
  {
    "headings" : [
      "Return Value",
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/insertObject(obj:index:ty:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Insert an object, at the index you provide, into the array object you specify.  The identifier of the array object to update. The index value of the array to update. The type of object to add to the array. Return Value The object Id that references the object added. Discussion This method extends the array by inserting a new object. If you want to change an existing index, use the putObject(obj:index:ty:) to put in an object or put(obj:index:value:) to put in a value.",
    "summary" : "Insert an object, at the index you provide, into the array object you specify.",
    "title" : "insertObject(obj:index:ty:)"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/delete(obj:index:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Deletes the object or value at the index you provide from the array object you specify.  The identifier of the array to update. The index position to remove. Discussion This method shrinks the length of the array object.",
    "summary" : "Deletes the object or value at the index you provide from the array object you specify.",
    "title" : "delete(obj:index:)"
  },
  {
    "headings" : [
      "Return Value"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AnyCodingKey\/parsePath(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Parses a string into an array of generic coding path elements.  The string to parse. Return Value An array of coding path elements corresponding to the string.",
    "summary" : "Parses a string into an array of generic coding path elements.",
    "title" : "parsePath(_:)"
  },
  {
    "headings" : [
      "Overview"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ScalarValueRepresentable"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A type that can be represented as an individual value within an Automerge document.  Overview The ScalarValue representation of a local type is an all-at-once update, as compared with Value.Object(_:_:) types which represent types that can be incrementally updated by multiple collaborators. For more complex types, conform your type to the Codable protocol and consider using AutomergeEncoder and AutomergeDecoder to store those representations into an Automerge document. If your type is a simple representation, you can encode your own types as a scalar value by conforming your type to ScalarValueRepresentable. By doing so, you provide the functions needed to convert with one of the Automerge primitive types, represented by ScalarValue. Implement toScalarValue() to encode your type into a relevant Automerge primitive. For example, you can encode your type into a buffer of bytes, and store the result as a value by returning ScalarValue.Bytes(_:) with the data embedded. Implement fromScalarValue(_:) and fromValue(_:) to decode the scalar value into your type. Types that conform to ScalarValueRepresentable define a localized error type to provide information when conversion issues arise.",
    "summary" : "A type that can be represented as an individual value within an Automerge document.",
    "title" : "ScalarValueRepresentable"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/DeleteSeq\/init(obj:index:length:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "init(obj:index:length:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AutomergeEncoder\/encode(_:)-7gbuh"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Encodes a value you provide into the encoder’s Automerge document.  The value to encode.",
    "summary" : "Encodes a value you provide into the encoder’s Automerge document.",
    "title" : "encode(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/LogVerbosity\/_=(_:_:)-329ct"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Comparable.<=(_:_:). ",
    "summary" : "Inherited from Comparable.<=(_:_:).",
    "title" : "<=(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Counter\/init(from:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Decodes a counter instance from the decoder instance you provide.  The decoder to read.",
    "summary" : "Decodes a counter instance from the decoder instance you provide.",
    "title" : "init(from:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/BindingError\/Error-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Error Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/ScalarValue\/null"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "ScalarValue.null"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/generateSyncMessage(state:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.generateSyncMessage(state:). ",
    "summary" : "Inherited from DocProtocol.generateSyncMessage(state:).",
    "title" : "generateSyncMessage(state:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Counter\/increment(by:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Updates the counter, incrementing or decrementing by the value you provide.  The value to add (or subtract) from the counter.",
    "summary" : "Updates the counter, incrementing or decrementing by the value you provide.",
    "title" : "increment(by:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/PathElement\/Hashable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Hashable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeActorId\/read(from:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.read(from:). ",
    "summary" : "Inherited from FfiConverter.read(from:).",
    "title" : "read(from:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Counter\/objectWillChange"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "13.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.15",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "13.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "6.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from ObservableObject.objectWillChange. ",
    "summary" : "Inherited from ObservableObject.objectWillChange.",
    "title" : "objectWillChange"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeExpandMark\/write(_:into:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.write(_:into:). ",
    "summary" : "Inherited from FfiConverter.write(_:into:).",
    "title" : "write(_:into:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/changes()"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.changes(). ",
    "summary" : "Inherited from DocProtocol.changes().",
    "title" : "changes()"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeDoc\/write(_:into:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.write(_:into:). ",
    "summary" : "Inherited from FfiConverter.write(_:into:).",
    "title" : "write(_:into:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/spliceText(obj:start:delete:chars:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "spliceText(obj:start:delete:chars:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocError\/errorDescription"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from LocalizedError.errorDescription. ",
    "summary" : "Inherited from LocalizedError.errorDescription.",
    "title" : "errorDescription"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeSyncState\/lower(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.lower(_:). ",
    "summary" : "Inherited from FfiConverter.lower(_:).",
    "title" : "lower(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/generateSyncMessage(state:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "generateSyncMessage(state:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ExpandMark\/Equatable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Equatable Implementations"
  },
  {
    "headings" : [
      "Return Value",
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/get(obj:key:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Get the value of the key you provide from the dictionary object you specify.  The identifier of the dictionary object. The key within the dictionary. Return Value The value of the key, or nil if the key doesn’t exist in the dictionary. Discussion Inspect the Value returned to determine if the value represents an object or a scalar value. Note that if there are multiple conflicting values this method will return one of them  arbitrarily (but deterministically). If you need all the conflicting values see getAll(obj:key:)",
    "summary" : "Get the value of the key you provide from the dictionary object you specify.",
    "title" : "get(obj:key:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeReceiveSyncError\/write(_:into:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.write(_:into:). ",
    "summary" : "Inherited from FfiConverter.write(_:into:).",
    "title" : "write(_:into:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/UIntScalarConversionError\/notUIntValue(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "UIntScalarConversionError.notUIntValue(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/KeyValue\/value"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "value"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Patch"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "Patch"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/mapKeysAt(obj:heads:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.mapKeysAt(obj:heads:). ",
    "summary" : "Inherited from DocProtocol.mapKeysAt(obj:heads:).",
    "title" : "mapKeysAt(obj:heads:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/marksAt(obj:heads:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "marksAt(obj:heads:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/CodingKeyLookupError\/SchemaMissing(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The path provided expected schema within the Automerge document that doesn’t exist. ",
    "summary" : "The path provided expected schema within the Automerge document that doesn’t exist.",
    "title" : "CodingKeyLookupError.SchemaMissing(_:)"
  },
  {
    "headings" : [
      "Overview",
      "API Layers",
      "Additional Utilities"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Create, Update, and Synchronize data for collaborative applications. Overview Automerge makes it easier to store data for your app locally, update that data independently and asynchronously, and consistently merge updates and changes. Seamless, consistent merging Automerge is a Conflict-Free Replicated Data Type (CRDT), which allows concurrent changes on different devices to be merged automatically without requiring any central server. For more information on the conflict resolution approach, see Managing Conflicts at the Automerge site. Immutable state Automerge provides an immutable snapshot of the application state at a point in time. As you make changes to a Automerge document, or merge in changes from elsewhere, the document collects and organizes those changes. Read Tracking Changes and History for more information about accessing that history. Network-agnostic Automerge is a pure data structure library that does not care about networks, protocols, or transports. Portable Originally developed in JavaScript, Automerge uses a core library written in the Rust language. Automerge runs on Node.js, Electron, and modern browsers using the core library compiled to WebAssembly. The Rust library exposes a C API for use with other languages. The core is packaged as a static library within an XCFramework for use on Apple platforms. API Layers The lowest layer lets you interact with the cross platform Automerge document API. For more information on the core API layer, read Using the dynamic schema and core data model and Tracking Changes and History, and the methods exposed on Document. At a higher layer, this package provides a custom encoder and decoder that you can use to map Codable data types into the dynamic Automerge schema. For more information on the Codable layer, read Storing and loading your types in Automerge documents Additional Utilities The Automerge-swift package conforms an Automerge document to the Transferrable protocol. To aid in sharing Automerge documents as a base type, it also defines a Uniform Type Identifier that you can use in your app to load, save, or share Automerge documents. Read Saving, loading, and sharing Automerge documents as Data for more information on the data types and saving an Automerge document directly. AutomergeUtilities, a separate module provided by the Automerge-swift package, provides additional methods to assist with debugging your app, and methods to walk and parse the Automerge document schema. Read Five Minute Quick Start to get a quick taste of how to use Automerge, or Meeting Notes, a Document-based SwiftUI app using Automerge for a walk-through that illustrates how to use Automerge within a demonstration app.",
    "summary" : "Create, Update, and Synchronize data for collaborative applications.",
    "title" : "Automerge"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeObjType_lower(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypeObjType_lower(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Change\/==(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.==(_:_:). ",
    "summary" : "Inherited from Equatable.==(_:_:).",
    "title" : "==(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/encodeNewChanges()"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "encodeNewChanges()"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypePatchAction\/read(from:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.read(from:). ",
    "summary" : "Inherited from FfiConverter.read(from:).",
    "title" : "read(from:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/ScalarValue\/Equatable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Equatable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ObjType\/CustomDebugStringConvertible-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "CustomDebugStringConvertible Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeSyncState\/write(_:into:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.write(_:into:). ",
    "summary" : "Inherited from FfiConverter.write(_:into:).",
    "title" : "write(_:into:)"
  },
  {
    "headings" : [
      "Return Value"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/encodeChangesSince(heads:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Encode and return any changes made to the document between now and the point in time you specify.  The set of ChangeHash that represents a point of time in the history the document. Return Value Encoded changes suitable for sending over the network and applying to another document using applyEncodedChanges(encoded:).",
    "summary" : "Encode and return any changes made to the document between now and the point in time you specify.",
    "title" : "encodeChangesSince(heads:)"
  },
  {
    "headings" : [
      "Return Value",
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/get(obj:index:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Get the value at the index position you provide from the array object you specify.  The identifier of the array object. The index position within the array. Return Value The value of the key, or nil if the key doesn’t exist in the dictionary. Discussion If you request a index beyond the bounds of the array, this method throws an error. Note that if there are multiple conflicting values this method will return one of them  arbitrarily (but deterministically). If you need all the conflicting values see getAll(obj:index:)",
    "summary" : "Get the value at the index position you provide from the array object you specify.",
    "title" : "get(obj:index:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Counter\/isBound"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns a Boolean value that indicates wether this reference type is actively updating an Automerge document. ",
    "summary" : "Returns a Boolean value that indicates wether this reference type is actively updating an Automerge document.",
    "title" : "isBound"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/getAllAtInList(obj:index:heads:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "getAllAtInList(obj:index:heads:)"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ObjType\/List"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A type that represents an array of Automerge values.  Discussion An Automerge list type can be either another object type, or a ScalarValue. Automerge list types are not constrained to a single type for all values within the array.",
    "summary" : "A type that represents an array of Automerge values.",
    "title" : "ObjType.List"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DecodeSyncStateError\/Internal(message:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "DecodeSyncStateError.Internal(message:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/BooleanScalarConversionError\/notboolValue(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "BooleanScalarConversionError.notboolValue(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocError\/failureReason"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from LocalizedError.failureReason. ",
    "summary" : "Inherited from LocalizedError.failureReason.",
    "title" : "failureReason"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Mark\/==(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.==(_:_:). ",
    "summary" : "Inherited from Equatable.==(_:_:).",
    "title" : "==(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/CodingKeyLookupError\/AutomergeDocError(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "An underlying Automerge Document error. ",
    "summary" : "An underlying Automerge Document error.",
    "title" : "CodingKeyLookupError.AutomergeDocError(_:)"
  },
  {
    "headings" : [
      "Return Value"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/receiveSyncMessageWithPatches(state:message:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Apply the sync message to update the sync state and Automerge document with the sync message from a peer, returning a list of patches applied.  The instance of SyncState that represents the peer you’re syncing with. The message from the peer to update this document and sync state. Return Value An array of Patch that represent the changes applied from the peer.",
    "summary" : "Apply the sync message to update the sync state and Automerge document with the sync message from a peer, returning a list of patches applied.",
    "title" : "receiveSyncMessageWithPatches(state:message:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/LogVerbosity\/...(_:)-nira"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Comparable....(_:). ",
    "summary" : "Inherited from Comparable....(_:).",
    "title" : "...(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/getInMap(obj:key:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.getInMap(obj:key:). ",
    "summary" : "Inherited from DocProtocol.getInMap(obj:key:).",
    "title" : "getInMap(obj:key:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocError"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "DocError"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/marksAt(obj:heads:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.marksAt(obj:heads:). ",
    "summary" : "Inherited from DocProtocol.marksAt(obj:heads:).",
    "title" : "marksAt(obj:heads:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeCursor_lift(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypeCursor_lift(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypePatchAction"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypePatchAction"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Change\/message"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "message"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/PathElement\/prop"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "prop"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeChange\/read(from:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.read(from:). ",
    "summary" : "Inherited from FfiConverter.read(from:).",
    "title" : "read(from:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/text(obj:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "text(obj:)"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/SchemaStrategy\/createWhenNeeded"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Creates schema where none exists, errors on schema mismatch.  Discussion Basic schema checking for containers that creates relevant objects in Automerge at the relevant path doesn’t exist. If there is something in an existing Automerge document that doesn’t match the type of container, or if the path is a leaf-node (a scalar value, or a Text instance), then the lookup captures the schema error for later presentation.",
    "summary" : "Creates schema where none exists, errors on schema mismatch.",
    "title" : "SchemaStrategy.createWhenNeeded"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeDoc\/read(from:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.read(from:). ",
    "summary" : "Inherited from FfiConverter.read(from:).",
    "title" : "read(from:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeDoc\/lower(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.lower(_:). ",
    "summary" : "Inherited from FfiConverter.lower(_:).",
    "title" : "lower(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/CodingKeyLookupError"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Automerge Encoding errors ",
    "summary" : "Automerge Encoding errors",
    "title" : "CodingKeyLookupError"
  },
  {
    "headings" : [
      "Return Value"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/cursorPositionAt(obj:cursor:heads:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The historical position of the cursor for the list or text object and point in time you provide.  The object identifier of the list or text object. The cursor created for this list or text object The set of ChangeHash that represents a point of time in the history the document. Return Value The index position of a list, or the index position of the UTF-8 view in the string, of the cursor.",
    "summary" : "The historical position of the cursor for the list or text object and point in time you provide.",
    "title" : "cursorPositionAt(obj:cursor:heads:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeSyncState_lower(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypeSyncState_lower(_:)"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Counter\/init(_:doc:path:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Creates a new Counter reference instance bound within an Automerge document.  The Automerge document associated with this reference. A string path that represents a Counter within the Automerge document. An initial string value for the text reference. Discussion The initializer can throw an error if the path provided doesn’t match to a counter type stored in the Automerge document you provide.",
    "summary" : "Creates a new Counter reference instance bound within an Automerge document.",
    "title" : "init(_:doc:path:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/PatchAction\/Conflict(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Flag that a property within an object is conflicted. ",
    "summary" : "Flag that a property within an object is conflicted.",
    "title" : "PatchAction.Conflict(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocError\/Equatable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Equatable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/ReceiveSyncError\/Internal(message:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "ReceiveSyncError.Internal(message:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeReceiveSyncError\/read(from:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.read(from:). ",
    "summary" : "Inherited from FfiConverter.read(from:).",
    "title" : "read(from:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/BindingError\/InvalidPath(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The path provided was invalid to bind into the Automerge document. ",
    "summary" : "The path provided was invalid to bind into the Automerge document.",
    "title" : "BindingError.InvalidPath(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/StringScalarConversionError\/errorDescription"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A localized message describing what error occurred. ",
    "summary" : "A localized message describing what error occurred.",
    "title" : "errorDescription"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ExpandMark\/after"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Characters added just after the mark should be inside the mark. ",
    "summary" : "Characters added just after the mark should be inside the mark.",
    "title" : "ExpandMark.after"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/mark(obj:start:end:expand:name:value:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "mark(obj:start:end:expand:name:value:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/BindingError\/localizedDescription"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from Error.localizedDescription. ",
    "summary" : "Inherited from Error.localizedDescription.",
    "title" : "localizedDescription"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AutomergeText\/CustomStringConvertible-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "CustomStringConvertible Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/DeleteSeq"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A sequence of deletions. ",
    "summary" : "A sequence of deletions.",
    "title" : "DeleteSeq"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/TimestampScalarConversionError\/errorDescription"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A localized message describing what error occurred. ",
    "summary" : "A localized message describing what error occurred.",
    "title" : "errorDescription"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Change\/init(actorId:message:deps:timestamp:bytes:hash:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "init(actorId:message:deps:timestamp:bytes:hash:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/FloatingPointScalarConversionError\/notF64Value(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FloatingPointScalarConversionError.notF64Value(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/BindingError\/!=(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.!=(_:_:). ",
    "summary" : "Inherited from Equatable.!=(_:_:).",
    "title" : "!=(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/heads()"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "heads()"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AnyCodingKey\/description"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A string description of the schema path element. ",
    "summary" : "A string description of the schema path element.",
    "title" : "description"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/BindingError"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Binding errors ",
    "summary" : "Binding errors",
    "title" : "BindingError"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Mark\/start"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "start"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/ScalarValue\/string(value:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "ScalarValue.string(value:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/SyncState\/theirHeads()"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from SyncStateProtocol.theirHeads(). ",
    "summary" : "Inherited from SyncStateProtocol.theirHeads().",
    "title" : "theirHeads()"
  },
  {
    "headings" : [
      "Return Value"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/values(obj:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Get a list of all the current values for the array or dictionary object you specify.  The identifier of an array or dictionary object. Return Value For an array object, the list of all current values. For a dictionary object, the list of the values for all the keys.",
    "summary" : "Get a list of all the current values for the array or dictionary object you specify.",
    "title" : "values(obj:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ChangeHash"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "An opaque hash that represents a change within an Automerge document. ",
    "summary" : "An opaque hash that represents a change within an Automerge document.",
    "title" : "ChangeHash"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/PatchAction\/marks(obj:marks:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "PatchAction.marks(obj:marks:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Change\/deps"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "deps"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/SyncState\/reset()"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Reset the state if the connection is interrupted  Discussion Some of the state in a SyncState relies on the reliable, in-order nature of the transport. If a connection has dropped and this can no longer be relied (messages may have been lost, or may be redelivered etc. etc.) then you must call reset() before continuing to synch.",
    "summary" : "Reset the state if the connection is interrupted",
    "title" : "reset()"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/KeyValue"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "KeyValue"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeScalarValue\/write(_:into:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.write(_:into:). ",
    "summary" : "Inherited from FfiConverter.write(_:into:).",
    "title" : "write(_:into:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/incrementInMap(obj:key:by:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.incrementInMap(obj:key:by:). ",
    "summary" : "Inherited from DocProtocol.incrementInMap(obj:key:by:).",
    "title" : "incrementInMap(obj:key:by:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeActorId_lift(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypeActorId_lift(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/mapEntries(obj:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.mapEntries(obj:). ",
    "summary" : "Inherited from DocProtocol.mapEntries(obj:).",
    "title" : "mapEntries(obj:)"
  },
  {
    "headings" : [
      "Overview",
      "Defining a type for your file format",
      "Saving and loading Documents"
    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AutomergeDataType"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Define the Automerge uniform type identifier in your app to share Automerge documents. Overview This library defines the Uniform Type Identifier Automerge\/UniformTypeIdentifiers\/UTType\/automerge  for the bytes that make up an Automerge document. This type is used in the transferRepresentation property of an Automerge document, to conform Automerge documents to the Transferable protocol. Defining a type for your file format The identifier for the automerge type is com.github.automerge, and the provided type conforms to the type public.data. When defining a type for your app, as described in Defining file and data types for your app, you may conform your own app’s type to Automerge\/UniformTypeIdentifiers\/UTType\/automerge if you are using the bytes from save() as the on-disk representation. If your file format wraps those bytes, then provide your own type definition that does not conform to the automerge type. If you use the automerge type directly, define the type as an imported type within the Info.plist file for your app. The details are most easily updated in the Imported Type Definitions panel of the Info panel for your app’s target in Xcode. Description Automerge document Identifier com.github.automerge Conforms To public.data Reference URL https:\/\/automerge.org\/ If you are editing the Info.plist file directly, the following stanza reflects a single imported type declaration declaring this type:  Saving and loading Documents Use save() to generate Data that represents a compacted version of the Automerge document. Calling save collapses concurrent changes applied since the last save, or when the document was loaded. The compressed encoding of the document which is efficient and can be used to initialize an Automerge document with init(_:logLevel:). The Automerge core library is intentionally agnostic to how you transfer, store, or load the bytes that make up an Automerge document, or updates between documents.",
    "summary" : "Define the Automerge uniform type identifier in your app to share Automerge documents.",
    "title" : "Saving, loading, and sharing Automerge documents as Data"
  },
  {
    "headings" : [
      "Overview"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Patch"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A collection of updates applied to an Automerge document.  Overview A patch can be received from applying updates to an Automerge document with one of the following methods: applyEncodedChangesWithPatches(encoded:) receiveSyncMessageWithPatches(state:message:) mergeWithPatches(other:). You can inspect these patches to identify the objects updated within the Automerge document, in order to react accordingly within your code. A common use case for inspecting patches is to recalculate derived data that is using Automerge as an authoritative source.",
    "summary" : "A collection of updates applied to an Automerge document.",
    "title" : "Patch"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Mark\/end"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "end"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/fork()"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.fork(). ",
    "summary" : "Inherited from DocProtocol.fork().",
    "title" : "fork()"
  },
  {
    "headings" : [
      "Overview"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Cursor"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A opaque type that represents a location within an array or text object that adjusts with insertions and deletes to maintain its relative position.  Overview Set a cursor using cursor(obj:position:), or cursorAt(obj:position:heads:) to place a cursor at a previous point in time. Retrieve the cursor position from the document using cursorPosition(obj:cursor:), or use cursorPositionAt(obj:cursor:heads:) to get the cursor position at a previous point in time.",
    "summary" : "A opaque type that represents a location within an array or text object that adjusts with insertions and deletes to maintain its relative position.",
    "title" : "Cursor"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/PatchAction\/Increment(_:_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Increment the property of the identified object, typically a Counter. ",
    "summary" : "Increment the property of the identified object, typically a Counter.",
    "title" : "PatchAction.Increment(_:_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/CodingKeyLookupError\/MismatchedSchema(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The path provided doesn’t match the schema within the Automerge Document. ",
    "summary" : "The path provided doesn’t match the schema within the Automerge Document.",
    "title" : "CodingKeyLookupError.MismatchedSchema(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/UIntScalarConversionError\/recoverySuggestion"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from LocalizedError.recoverySuggestion. ",
    "summary" : "Inherited from LocalizedError.recoverySuggestion.",
    "title" : "recoverySuggestion"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeCursor\/lower(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.lower(_:). ",
    "summary" : "Inherited from FfiConverter.lower(_:).",
    "title" : "lower(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/SchemaStrategy\/Equatable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Equatable Implementations"
  },
  {
    "headings" : [
      "Return Value",
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/save()"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Encode the Automerge document in a compressed binary format.  Return Value The data that represents all the changes within this document. Discussion The save function also compacts the memory footprint of an Automerge document and increments the result of heads(), which indicates a specific point in time for the history of the document.",
    "summary" : "Encode the Automerge document in a compressed binary format.",
    "title" : "save()"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/textAt(obj:heads:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "textAt(obj:heads:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ObjId\/!=(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.!=(_:_:). ",
    "summary" : "Inherited from Equatable.!=(_:_:).",
    "title" : "!=(_:_:)"
  },
  {
    "headings" : [
      "Return Value"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/textAt(obj:heads:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Get the historical value of the text object and point in time you specify.  The identifier of a text object. The set of ChangeHash that represents a point of time in the history the document. Return Value The string value that the text object contains at the point in time you specify.",
    "summary" : "Get the historical value of the text object and point in time you specify.",
    "title" : "textAt(obj:heads:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/FloatingPointScalarConversionError"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A failure to convert an Automerge scalar value to or from a 64-bit floating-point value representation. ",
    "summary" : "A failure to convert an Automerge scalar value to or from a 64-bit floating-point value representation.",
    "title" : "FloatingPointScalarConversionError"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeChange_lift(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypeChange_lift(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/getAllInList(obj:index:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.getAllInList(obj:index:). ",
    "summary" : "Inherited from DocProtocol.getAllInList(obj:index:).",
    "title" : "getAllInList(obj:index:)"
  },
  {
    "headings" : [
      "Overview"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/DocError"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "An general document error.  Overview The error is specific to the Rust language binding infrastructure.",
    "summary" : "An general document error.",
    "title" : "DocError"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/DocError\/Error-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Error Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/CodingKeyLookupError\/InvalidPathElement(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The path element is not valid. ",
    "summary" : "The path element is not valid.",
    "title" : "CodingKeyLookupError.InvalidPathElement(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Change\/Equatable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Equatable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/PatchAction\/DeleteSeq(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Delete a sequence from the identified object starting at the index you provide for the length you provide. ",
    "summary" : "Delete a sequence from the identified object starting at the index you provide for the length you provide.",
    "title" : "PatchAction.DeleteSeq(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Change\/actorId"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The identity of the actor that made the change. ",
    "summary" : "The identity of the actor that made the change.",
    "title" : "actorId"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/BooleanScalarConversionError\/errorDescription"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A localized message describing what error occurred. ",
    "summary" : "A localized message describing what error occurred.",
    "title" : "errorDescription"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/receiveSyncMessage(state:message:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Apply the sync message to update the sync state and Automerge document with the sync message from a peer.  The instance of SyncState that represents the peer you’re syncing with. The message from the peer to update this document and sync state. Discussion if you need to know what changed in the document as a result of the message use the function receiveSyncMessageWithPatches(state:message:).",
    "summary" : "Apply the sync message to update the sync state and Automerge document with the sync message from a peer.",
    "title" : "receiveSyncMessage(state:message:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Mark\/Equatable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Equatable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/commitWith(msg:time:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.commitWith(msg:time:). ",
    "summary" : "Inherited from DocProtocol.commitWith(msg:time:).",
    "title" : "commitWith(msg:time:)"
  },
  {
    "headings" : [
      "Return Value"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/text(obj:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Get the current value of the text object you specify.  The identifier of a text object. Return Value The current string value that the text object contains.",
    "summary" : "Get the current value of the text object you specify.",
    "title" : "text(obj:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/objectWillChange"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "13.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.15",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "13.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "6.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from ObservableObject.objectWillChange. ",
    "summary" : "Inherited from ObservableObject.objectWillChange.",
    "title" : "objectWillChange"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ExpandMark\/before"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Characters added just before the mark should be inside the mark. ",
    "summary" : "Characters added just before the mark should be inside the mark.",
    "title" : "ExpandMark.before"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/load(bytes:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "load(bytes:)"
  },
  {
    "headings" : [
      "Return Value"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/mapEntries(obj:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Get a list of the current key and values from the dictionary object you specify.  The identifier of the dictionary object. Return Value An array of (String, Value) that represents the key and value combinations of the dictionary object.",
    "summary" : "Get a list of the current key and values from the dictionary object you specify.",
    "title" : "mapEntries(obj:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Mark\/!=(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.!=(_:_:). ",
    "summary" : "Inherited from Equatable.!=(_:_:).",
    "title" : "!=(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/insertObjectInList(obj:index:objType:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "insertObjectInList(obj:index:objType:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AnyCodingKey\/CustomStringConvertible-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "CustomStringConvertible Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Prop\/Index(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "An index into a sequence. ",
    "summary" : "An index into a sequence.",
    "title" : "Prop.Index(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Change\/deps"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The list of changes that this change depends upon. ",
    "summary" : "The list of changes that this change depends upon.",
    "title" : "deps"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/SchemaStrategy\/!=(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.!=(_:_:). ",
    "summary" : "Inherited from Equatable.!=(_:_:).",
    "title" : "!=(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/FloatingPointScalarConversionError\/errorDescription"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A localized message describing what error occurred. ",
    "summary" : "A localized message describing what error occurred.",
    "title" : "errorDescription"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeActorId"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypeActorId"
  },
  {
    "headings" : [
      "Return Value"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/getAll(obj:key:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Get the set of possibly conflicting values at the key you provide for the dictionary object that you specify.  The identifier of the dictionary object. The key within the dictionary. Return Value A set of value objects.",
    "summary" : "Get the set of possibly conflicting values at the key you provide for the dictionary object that you specify.",
    "title" : "getAll(obj:key:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Cursor\/CustomStringConvertible-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "CustomStringConvertible Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Mark\/value"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The value associated with the mark. ",
    "summary" : "The value associated with the mark.",
    "title" : "value"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Mark\/hash(into:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Hashable.hash(into:). ",
    "summary" : "Inherited from Hashable.hash(into:).",
    "title" : "hash(into:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Patch\/action"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The the type of change, and the value that patch updated, if relevant to the change. ",
    "summary" : "The the type of change, and the value that patch updated, if relevant to the change.",
    "title" : "action"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeActorId_lower(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypeActorId_lower(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/heads()"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.heads(). ",
    "summary" : "Inherited from DocProtocol.heads().",
    "title" : "heads()"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/merge(other:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "merge(other:)"
  },
  {
    "headings" : [
      "Overview",
      "Document-based Model",
      "Automerge Document Primitives",
      "Creating and updating the schema within an Automerge document",
      "Reading from a document",
      "Reading maps",
      "Updating maps",
      "Reading lists",
      "Updating lists",
      "Reading Text",
      "Updating Text values",
      "Setting and Reading cursors",
      "Updating counters"
    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ModelingData"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Store into, and read from, an Automerge document. Overview The Document class provides concurrency-safe access to the Automerge core API and low-level methods to read and write values into an Automerge document. The dynamic data model within an Automerge document is similar to a JSON document. Unlike JSON, a Document is backed by sets of nested CRDTs, which track the changes made within the data model. By using CRDTs, a Document can be consistently merged with other Document in a manner which preserves user intent as much as possible. Document-based Model The Automerge dynamic data model is composed of arrays and string-keyed maps, nested within one another, with the root of the data model a map, represented by ROOT. The data within an Automerge document is composed of nested objects, represented by the enumeration Value. Objects that contain other objects are have a unique identifier: ObjId and a type: ObjType. Like JSON, Automerge includes objects that contain other objects: arrays (ObjType.List) and dictionaries (ObjType.Map). Also like JSON, dictionaries in Automerge are keyed only by Strings. Automerge goes further than JSON when representing a few types. For example, Automerge includes a special type ObjType.Text to represent a concurrently editable string, separate from a singular value update of a string, represented by ScalarValue.String(_:). The Text object type represents the value of the string as a list of unicode scalar values. Automerge Document Primitives Objects within an Automerge document that don’t contain other objects are made up of Automerge’s primitive types, represented by the enumeration ScalarValue. Automerge maintains more type information than JSON, representing a number of different types. Automerge primitive Matching Swift type null (ScalarValue.Null) nil booleans (ScalarValue.Boolean(_:)) Bool unsigned integers (ScalarValue.Uint(_:)) UInt signed integers (ScalarValue.Int(_:)) Int floating point numbers (ScalarValue.F64(_:)) Double strings (ScalarValue.String(_:)) String byte arrays (ScalarValue.Bytes(_:)) Data timestamps (ScalarValue.Timestamp(_:)) Date counters (ScalarValue.Counter(_:)) Counter  Bytes scalar values are a buffer of bytes, represented in Swift by Data. Timestamp is a specific date\/time location. The ScalarValue.Timestamp(_:) representation uses an Int64 value to represent the number of seconds since epoch (UTC midnight, Jan 1, 1970). Creating and updating the schema within an Automerge document When using the low level API, you are responsible for creating the nested objects that make up the schema. The top-level of an Automerge document, represented by ROOT is an object of type ObjType.Map. When interacting with a ObjType.Map object, use putObject(obj:key:ty:) to nest another object. When you want to add a nested object into a ObjType.List, use putObject(obj:index:ty:). The methods that insert an object return an ObjId of the newly created object, which you use to modify the contents of the new object. Automerge supports a special type for collaborative string editing, represented by ObjType.Text. Use updateText(obj:value:) or spliceText(obj:start:delete:value:) to update the text. Automerge text also supports metadata about the text, represented by Mark. Use mark(obj:start:end:expand:name:value:) to set or update a mark across a range of text. Counter is another Automerge-specific primitive type that represents a concurrently updated counter. To update a counter directly within an Automerge document, use the increment(obj:key:by:) or increment(obj:index:by:) methods. You can explicitly set a counter value, such as an initial value, using put(obj:key:value:) or put(obj:index:value:), but using these methods ignores any previously or concurrently made increments or decrements. The Automerge-swift package provides a custom encoder and decoder that lets you establish schema that matches to types that conform to Codable. You can use the encoder to create the nested object schema in an Automerge document. For more information on using Codable types with the custom encoder and decoder, see Storing and loading your types in Automerge documents. Reading from a document The core API requires you to know what kind of object you’re reading from and use the relevant API. For maps, you’ll need the parameter key, represented by a String. In the case of dictionaries, or the parameter index, represented by UInt64. Use get(obj:key:) to get a value out of a dictionary and get(obj:index:) to get a value out of an array. See the documentation for Document for more detail on the individual methods. Reading maps get(obj:key:) getAll(obj:key:) keys(obj:) mapEntries(obj:) length(obj:) Updating maps put(obj:key:value:) putObject(obj:key:ty:) delete(obj:key:) Reading lists get(obj:index:) getAll(obj:index:) values(obj:) length(obj:) Updating lists insert(obj:index:value:) insertObject(obj:index:ty:) put(obj:index:value:) putObject(obj:index:ty:) delete(obj:index:) splice(obj:start:delete:values:) Reading Text text(obj:) length(obj:) marks(obj:) Updating Text values spliceText(obj:start:delete:value:) updateText(obj:value:) mark(obj:start:end:expand:name:value:) Setting and Reading cursors cursor(obj:position:) cursorAt(obj:position:heads:) cursorPosition(obj:cursor:) cursorPositionAt(obj:cursor:heads:) Updating counters increment(obj:key:by:) increment(obj:index:by:)",
    "summary" : "Store into, and read from, an Automerge document.",
    "title" : "Using the dynamic schema and core data model"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Patch\/Hashable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Hashable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AutomergeEncoder\/userInfo"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The user info dictionary for the encoder. ",
    "summary" : "The user info dictionary for the encoder.",
    "title" : "userInfo"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/CodingKeyLookupError\/PathExtendsThroughScalar(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The path provided extends through an Automerge ScalarValue, a leaf node in the schema. ",
    "summary" : "The path provided extends through an Automerge ScalarValue, a leaf node in the schema.",
    "title" : "CodingKeyLookupError.PathExtendsThroughScalar(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AutomergeDecoder\/decode(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns the type you specify, decoded from the Automerge document referenced by the decoder.  _ The type of the value to decode from the Automerge document.",
    "summary" : "Returns the type you specify, decoded from the Automerge document referenced by the decoder.",
    "title" : "decode(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Value\/Equatable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Equatable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocError\/helpAnchor"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from LocalizedError.helpAnchor. ",
    "summary" : "Inherited from LocalizedError.helpAnchor.",
    "title" : "helpAnchor"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/uniffiClonePointer()"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "uniffiClonePointer()"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeValue_lower(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypeValue_lower(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/ExpandMark\/none"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "ExpandMark.none"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/UIntScalarConversionError\/failureReason"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A localized message describing the reason for the failure. ",
    "summary" : "A localized message describing the reason for the failure.",
    "title" : "failureReason"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocError\/localizedDescription"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from Error.localizedDescription. ",
    "summary" : "Inherited from Error.localizedDescription.",
    "title" : "localizedDescription"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Patch\/path"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The path to the object that the update effects.  Discussion The path doesn’t identify the property or index being updated on that object, that information is contained with the associated action.",
    "summary" : "The path to the object that the update effects.",
    "title" : "path"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeScalarValue\/read(from:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.read(from:). ",
    "summary" : "Inherited from FfiConverter.read(from:).",
    "title" : "read(from:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocError\/Internal(message:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "DocError.Internal(message:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeProp"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypeProp"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeKeyValue\/read(from:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.read(from:). ",
    "summary" : "Inherited from FfiConverter.read(from:).",
    "title" : "read(from:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeSyncState_lift(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypeSyncState_lift(_:)"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/PatchAction\/SpliceText(obj:index:value:marks:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Splices characters into and\/or removes characters from the identified object at a given position within it.  Discussion The unsigned 64bit integer is the index to a UTF-8 code point, and not a grapheme cluster index. If you are working with Characters from a String, you will need to calculate the offset to insert it correctly. marks are the currently active marks for the inserted value",
    "summary" : "Splices characters into and\/or removes characters from the identified object at a given position within it.",
    "title" : "PatchAction.SpliceText(obj:index:value:marks:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/LogVerbosity\/_=(_:_:)-86dq6"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Comparable.>=(_:_:). ",
    "summary" : "Inherited from Comparable.>=(_:_:).",
    "title" : ">=(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AutomergeText\/==(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.==(_:_:). ",
    "summary" : "Inherited from Equatable.==(_:_:).",
    "title" : "==(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/ObjType\/map"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "ObjType.map"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Change"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "Change"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Mark\/value"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "value"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/ScalarValue\/f64(value:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "ScalarValue.f64(value:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeMark"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypeMark"
  },
  {
    "headings" : [
      "Return Value"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/marksAt(obj:heads:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Get the historical list of marks for a text object and point in time you specify.  The identifier of the text object. The set of ChangeHash that represents a point of time in the history the document. Return Value A list of Mark for the text object at the point in time you specify.",
    "summary" : "Get the historical list of marks for a text object and point in time you specify.",
    "title" : "marksAt(obj:heads:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/objectType(obj:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "objectType(obj:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AutomergeEncoder\/doc"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The instance of the an Automerge document to encode into. ",
    "summary" : "The instance of the an Automerge document to encode into.",
    "title" : "doc"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/PatchAction\/DeleteMap(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Delete a key from a identified object. ",
    "summary" : "Delete a key from a identified object.",
    "title" : "PatchAction.DeleteMap(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/getAllInMap(obj:key:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "getAllInMap(obj:key:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/getAllAtInMap(obj:key:heads:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.getAllAtInMap(obj:key:heads:). ",
    "summary" : "Inherited from DocProtocol.getAllAtInMap(obj:key:heads:).",
    "title" : "getAllAtInMap(obj:key:heads:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/valuesAt(obj:heads:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "valuesAt(obj:heads:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeSyncState"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypeSyncState"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Counter\/!=(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.!=(_:_:). ",
    "summary" : "Inherited from Equatable.!=(_:_:).",
    "title" : "!=(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AnyCodingKey\/CodingKey-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "CodingKey Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/IntScalarConversionError\/recoverySuggestion"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from LocalizedError.recoverySuggestion. ",
    "summary" : "Inherited from LocalizedError.recoverySuggestion.",
    "title" : "recoverySuggestion"
  },
  {
    "headings" : [
      "Return Value",
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ScalarValueRepresentable\/fromValue(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Converts the Automerge representation to a local type, or returns a failure.  The Automerge Value to be converted as a scalar value into a local type. Return Value The type, converted to a local type, or an error indicating the reason for the failure to convert. Discussion The protocol accepts defines a function to accept a Value primarily for convenience. Value is a higher level enumeration that also includes object types such as ObjType.List, ObjType.Map, and ObjType.Text.",
    "summary" : "Converts the Automerge representation to a local type, or returns a failure.",
    "title" : "fromValue(_:)"
  },
  {
    "headings" : [
      "Overview"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AnyCodingKey"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A type that maps provides a coding key value with an enumeration.  Overview This type conforms to the CodingKey protocol to provide a general way to represent the path elements to a location within a document schema. Create the path elements individually, or use the method parsePath(_:) to convert a string into a series of path elements that can be used to identify a specific location within an Automerge document. The following example converts the string \"example.[0].name\" to a path:  The resulting path, [example, [0], name] represents: The key ‘example’ in the ROOT dictionary. The first (index 0) element of the list, referenced above. The value or object at the key name in the element reference above. Encode a type to this location with encode(_:at:) or decode a type from this location with decode(_:from:). The same string path format is used in lookupPath(path:) to look up the ObjId of a location within an Automerge document.",
    "summary" : "A type that maps provides a coding key value with an enumeration.",
    "title" : "AnyCodingKey"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/mapKeys(obj:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "mapKeys(obj:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/ScalarValue\/uint(value:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "ScalarValue.uint(value:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Change\/hash"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The identity of the change, its hash. ",
    "summary" : "The identity of the change, its hash.",
    "title" : "hash"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/IntScalarConversionError\/notIntScalarValue(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "IntScalarConversionError.notIntScalarValue(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/putInList(obj:index:value:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "putInList(obj:index:value:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Prop\/Equatable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Equatable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/FloatingPointScalarConversionError\/Error-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Error Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/incrementInList(obj:index:by:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "incrementInList(obj:index:by:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AnyCodingKey\/debugDescription"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from CodingKey.debugDescription. ",
    "summary" : "Inherited from CodingKey.debugDescription.",
    "title" : "debugDescription"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/CodingKeyLookupError\/InvalidValueLookup(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The path provided to look up a value is invalid. ",
    "summary" : "The path provided to look up a value is invalid.",
    "title" : "CodingKeyLookupError.InvalidValueLookup(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/ExpandMark\/after"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "ExpandMark.after"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/init(logLevel:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Creates an new, empty Automerge document.  The level at which to generate logs into unified logging from actions within this document.",
    "summary" : "Creates an new, empty Automerge document.",
    "title" : "init(logLevel:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/BooleanScalarConversionError\/localizedDescription"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from Error.localizedDescription. ",
    "summary" : "Inherited from Error.localizedDescription.",
    "title" : "localizedDescription"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeValue\/write(_:into:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.write(_:into:). ",
    "summary" : "Inherited from FfiConverter.write(_:into:).",
    "title" : "write(_:into:)"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AnyCodingKey\/ROOT"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A coding key that represents the root of a schema hierarchy.  Discussion ROOT conceptually maps to the equivalent of an empty array of some CodingKey.",
    "summary" : "A coding key that represents the root of a schema hierarchy.",
    "title" : "ROOT"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ScalarValue\/Boolean(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A Boolean value. ",
    "summary" : "A Boolean value.",
    "title" : "ScalarValue.Boolean(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/SyncStateProtocol"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "SyncStateProtocol"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AutomergeText\/isBound"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "isBound"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Mark\/!=(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.!=(_:_:). ",
    "summary" : "Inherited from Equatable.!=(_:_:).",
    "title" : "!=(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeCursor\/write(_:into:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.write(_:into:). ",
    "summary" : "Inherited from FfiConverter.write(_:into:).",
    "title" : "write(_:into:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ExpandMark\/both"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Characters added just before or just after the mark should be inside the mark. ",
    "summary" : "Characters added just before or just after the mark should be inside the mark.",
    "title" : "ExpandMark.both"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/fork()"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "fork()"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeMark_lift(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypeMark_lift(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/SyncState"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "SyncState"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/IntScalarConversionError\/Error-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Error Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeDoc\/lift(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.lift(_:). ",
    "summary" : "Inherited from FfiConverter.lift(_:).",
    "title" : "lift(_:)"
  },
  {
    "headings" : [
      "Return Value",
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/putObject(obj:index:ty:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Set or update an object within an array object you specify.  The identifier of the array object to update. The index value of the array to update. The type of object to add to the array. Return Value The object Id that references the object added. Discussion If the index position doesn’t yet exist within the array, this method will throw an error. To add an object that extends the array, use the method insertObject(obj:index:ty:).",
    "summary" : "Set or update an object within an array object you specify.",
    "title" : "putObject(obj:index:ty:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeActorId\/write(_:into:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.write(_:into:). ",
    "summary" : "Inherited from FfiConverter.write(_:into:).",
    "title" : "write(_:into:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/FloatingPointScalarConversionError\/localizedDescription"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from Error.localizedDescription. ",
    "summary" : "Inherited from Error.localizedDescription.",
    "title" : "localizedDescription"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypePathElement\/write(_:into:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.write(_:into:). ",
    "summary" : "Inherited from FfiConverter.write(_:into:).",
    "title" : "write(_:into:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/updateText(obj:chars:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.updateText(obj:chars:). ",
    "summary" : "Inherited from DocProtocol.updateText(obj:chars:).",
    "title" : "updateText(obj:chars:)"
  },
  {
    "headings" : [
      "Overview"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/SyncState"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The state of a synchronisation session with another peer.  Overview Use encode() to generate a byte representation of the SyncState to persist it, and use init(bytes:) to initialize a new instance from those bytes. The sync protocol is designed to run over a reliable in-order transport with the SyncState tracking the state between successive calls to generateSyncMessage(state:) and receiveSyncMessage(state:message:). The following code example illustrates using SyncState to generate and receive one side of a network sync.  For a more thorough example of sync, see Tracking Changes and History.",
    "summary" : "The state of a synchronisation session with another peer.",
    "title" : "SyncState"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeExpandMark_lift(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypeExpandMark_lift(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/IntScalarConversionError\/LocalizedError-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "LocalizedError Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/TimestampScalarConversionError\/localizedDescription"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from Error.localizedDescription. ",
    "summary" : "Inherited from Error.localizedDescription.",
    "title" : "localizedDescription"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/BindingError\/Unbound"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The instance is not bound to an Automerge Document. ",
    "summary" : "The instance is not bound to an Automerge Document.",
    "title" : "BindingError.Unbound"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/PathElement"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "PathElement"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/CodingKeyLookupError\/Error-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Error Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/cursorAt(obj:position:heads:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.cursorAt(obj:position:heads:). ",
    "summary" : "Inherited from DocProtocol.cursorAt(obj:position:heads:).",
    "title" : "cursorAt(obj:position:heads:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ObjType"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A type that represents an Automerge object. ",
    "summary" : "A type that represents an Automerge object.",
    "title" : "ObjType"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/getAtInList(obj:index:heads:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "getAtInList(obj:index:heads:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ActorId\/description"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from CustomStringConvertible.description. ",
    "summary" : "Inherited from CustomStringConvertible.description.",
    "title" : "description"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/increment(obj:key:by:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Increment or decrement the counter referenced by the key you provide in the dictionary object you specify.  The identifier of the dictionary object that holds the counter. The key in the dictionary object that references the counter. The amount to increment, or decrement, the counter.",
    "summary" : "Increment or decrement the counter referenced by the key you provide in the dictionary object you specify.",
    "title" : "increment(obj:key:by:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/LoadError"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "LoadError"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ScalarValue\/Timestamp(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A timestamp represented by the number of seconds since UNIX epoch (Jan 1st, 1970, 00:00 UTC). ",
    "summary" : "A timestamp represented by the number of seconds since UNIX epoch (Jan 1st, 1970, 00:00 UTC).",
    "title" : "ScalarValue.Timestamp(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AutomergeText\/description"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from CustomStringConvertible.description. ",
    "summary" : "Inherited from CustomStringConvertible.description.",
    "title" : "description"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Counter\/init(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Creates a new, unbound counter.  An initial string value for the text reference.",
    "summary" : "Creates a new, unbound counter.",
    "title" : "init(_:)"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/put(obj:key:value:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Set or update a value within a dictionary object you specify.  The identifier of the dictionary object to update. The key of the property to update. The value to set for the key you provide. Discussion If the object you update is a ScalarValue.Counter(_:), calling this function uniformly sets the value and ignores any previous increments or decrements of the value. If you intent to update the counter by a fixed amount, use the method increment(obj:key:by:) instead.",
    "summary" : "Set or update a value within a dictionary object you specify.",
    "title" : "put(obj:key:value:)"
  },
  {
    "headings" : [
      "Overview"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ObjId"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The unique internal identifier for an object stored in an Automerge document.  Overview An object identifier represents a unique object within an Automerge document. Use lookupPath(path:) to look up an existing object id. More frequently, methods that add objects to an Automerge Document return an the object Id that references the object added. For example putObject(obj:key:ty:) adds an object into an existing dictionary, and putObject(obj:index:ty:) adds an object into an existing list.",
    "summary" : "The unique internal identifier for an object stored in an Automerge document.",
    "title" : "ObjId"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeChangeHash\/lift(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.lift(_:). ",
    "summary" : "Inherited from FfiConverter.lift(_:).",
    "title" : "lift(_:)"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ObjType\/Map"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A type that represents a dictionary that uses the type String for keys.  Discussion A map type can be used to represent a Swift dictionary, or an swift value or reference type encoded in the document using AutomergeEncoder. An Automerge map type uses String for keys, and can reference any other Automerge object type or a ScalarValue. Automerge maps are not constrained to a single type for all values within the dictionary.",
    "summary" : "A type that represents a dictionary that uses the type String for keys.",
    "title" : "ObjType.Map"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ActorId\/CustomStringConvertible-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "CustomStringConvertible Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/insertInList(obj:index:value:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.insertInList(obj:index:value:). ",
    "summary" : "Inherited from DocProtocol.insertInList(obj:index:value:).",
    "title" : "insertInList(obj:index:value:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/receiveSyncMessageWithPatches(state:msg:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.receiveSyncMessageWithPatches(state:msg:). ",
    "summary" : "Inherited from DocProtocol.receiveSyncMessageWithPatches(state:msg:).",
    "title" : "receiveSyncMessageWithPatches(state:msg:)"
  },
  {
    "headings" : [
      "Overview",
      "Syncing documents"
    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Sync"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Synchronize any Automerge documents to seamlessly share and merge changes. Overview You can track the changes to documents yourself, using heads() to track points in time in documents, generating changes to apply using the methodsencodeNewChanges() and encodeChangesSince(heads:), and applying the changes with the method applyEncodedChanges(encoded:). To make synchronization between two documents easier, Automerge provides a pair of methods that determine and track the changes needed to synchronize any two documents. Using SyncState, these methods keep the size of changes needed to synchronize to a minimum. Syncing documents Create an instance of SyncState, which represents the state of a a peer document, to start the process. Use generateSyncMessage(state:) to update the initial sync state and generate an initial sync message to send to the another document. When receiving a sync state message, use receiveSyncMessage(state:message:) to apply the patches (if any) and update the sync state tracked in SyncState. For example, to sync two documents, create a new instance of SyncState for each document. Start the sync process by calling generateSyncMessage(state:) to generate an initial sync message and send this message to the other document. On the receiving side, receive the sync message using receiveSyncMessage(state:message:) to receive and apply any patches and update the sync state. When ever you receive a sync message, attempt to generate a return sync message with generateSyncMessage(state:). Repeated this process until a call to generateSyncMessage doesn’t return any bytes for a sync message. At that point, the two documents are fully in sync. The following code illustrates this process with two instances of Document in memory: ",
    "summary" : "Synchronize any Automerge documents to seamlessly share and merge changes.",
    "title" : "Synchronizing Automerge Documents"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Value"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "Value"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/deleteInList(obj:index:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.deleteInList(obj:index:). ",
    "summary" : "Inherited from DocProtocol.deleteInList(obj:index:).",
    "title" : "deleteInList(obj:index:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/mark(obj:start:end:expand:name:value:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.mark(obj:start:end:expand:name:value:). ",
    "summary" : "Inherited from DocProtocol.mark(obj:start:end:expand:name:value:).",
    "title" : "mark(obj:start:end:expand:name:value:)"
  },
  {
    "headings" : [
      "Overview",
      "Setup",
      "Creating the address book",
      "The “initial data” problem",
      "Generating a skeleton document",
      "Implementing `create`",
      "Adding a contact",
      "Listing contacts",
      "Updating a contact",
      "Merging address books",
      "Sync"
    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AddressBookExample"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Building a CLI address book application using Automerge. Overview All the code herein can also be found in the demo repository Let’s imagine we’re building a simple collaborative address book with a structure similar to the following JSON:  We’re going to build a simple CLI application called contaaacts for collaborating on an address book. Here’s what we want to be able to do:  Setup We’re creating a simple command line application, we’ll have a single file called Contaaacts.swift where we parse and dispatch arguments. No error handling of any kind because this is an example. As we go through the rest of this guide we’ll fill in the implementations of the handlers.  Creating the address book To create an address book we just need to create an Automerge document with an empty contacts array in it. This is conceptually simple but there’s a wrinkle, which we refer to as the “initial data” problem. Once we’ve explained the problem, the approach we take will make more sense. The “initial data” problem Automerge documents contain “objects”, which are maps, lists, or text objects. These objects have an ID (ObjId). Every Automerge document contains a “root” ID (ROOT)which is a map, any time you create a new object in an Automerge document the new object has an ID you use to refer to it. The reason you need to know this is because the IDs which Automerge generates are used to determine how to merge documents, this means that for two documents with similar structure to merge in the way we expect, they need to share a history. Let’s make this a bit more concrete. We are building a contact book application, the core data structure is a list of contacts under the contacts key in the document. The merge behaviour we want is that when two nodes concurrently add contacts to the contact book, they end up in the same sequence. In terms of the Automerge data model then, the contacts key is a property in the root object which contains a list object. The list has an ID - obtained by calling putObject(obj:key:ty:) with ROOT, \"contacts\", and ObjType.List. For concurrent insertions into this list to merge, we want all insertions to reference the same ObjId for the list, but every time you call putObject you get a new object ID. What this means is that every node needs to share a basic skeleton document which already has an empty \"contacts\" list in it. We are very much aware that this is not a good developer experience and we are thinking about ways to make this easier. See this issue Generating a skeleton document The easiest way to have every peer start from a shared history is to use the Automerge command line tools (installable by using cargo install automerge-cli) to generate an Automerge document from a JSON skeleton, and then including the bytes of this document as a resource in the application bundle.  You can verify the structure of the document by doing automerge export skeleton We bundle the skeleton as a resource in the application, see the demo repository for details. Implementing `create` Now that we have the skeleton document, implementing \"create\" is quite simple, we just output the contents of the bundled resource.  Adding a contact To add a contact we need to load the contents of the address book, then insert an ObjType.Map into the contacts list. Like so:  Note that we are using text objects to represent the name and email fields. Automerge does have a primitive string type (ScalarValue.String(_:)) but it’s generally best to use text. There’s very little extra cost to a text object and text objects support concurrent edits. Listing contacts To list contacts we iterate over each value in the contacts list, printing them out.  Updating a contact Here we load the document, loop over the contacts in the contacts list, and if we find a matching name we update the email.  Merging address books  Sync There’s quite a bit of ceremony involved in network programming in Swift, so we don’t repeat the code here, see the demo for the gory details.",
    "summary" : "Building a CLI address book application using Automerge.",
    "title" : "Address Book Example"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/textAt(obj:heads:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.textAt(obj:heads:). ",
    "summary" : "Inherited from DocProtocol.textAt(obj:heads:).",
    "title" : "textAt(obj:heads:)"
  },
  {
    "headings" : [
      "Return Value"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/mapEntriesAt(obj:heads:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Get a historical list of the keys and values from the dictionary object and point in time you specify.  The identifier of the dictionary object. The set of ChangeHash that represents a point of time in the history the document. Return Value An array of (String, Value) that represents the key and value combinations of the dictionary object.",
    "summary" : "Get a historical list of the keys and values from the dictionary object and point in time you specify.",
    "title" : "mapEntriesAt(obj:heads:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/lengthAt(obj:heads:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns the historical length of the array, dictionary, or text object and point in time you specify.  The identifier of an array, dictionary, or text object. The set of ChangeHash that represents a point of time in the history the document.",
    "summary" : "Returns the historical length of the array, dictionary, or text object and point in time you specify.",
    "title" : "lengthAt(obj:heads:)"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/PatchAction\/Insert(obj:index:values:marks:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Insert a collection of values at the index you provide for the identified object with the given marks  Discussion marks will only  be set for text objects.",
    "summary" : "Insert a collection of values at the index you provide for the identified object with the given marks",
    "title" : "PatchAction.Insert(obj:index:values:marks:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/DocError\/recoverySuggestion"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from LocalizedError.recoverySuggestion. ",
    "summary" : "Inherited from LocalizedError.recoverySuggestion.",
    "title" : "recoverySuggestion"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/PathParseError\/Error-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Error Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/BytesScalarConversionError\/failureReason"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A localized message describing the reason for the failure. ",
    "summary" : "A localized message describing the reason for the failure.",
    "title" : "failureReason"
  },
  {
    "headings" : [
      "Overview",
      "Overview"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Prop"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A type that represents a property on an object within an Automerge document.  Overview The property is either a Prop.Key(_:), in the from of a String to a map, or a Prop.Index(_:) with the index position represented as a 64-bit unsigned integer. Overview Automerge exposes Prop as a type that represents either a String based key into an Automerge ObjType.Map, or an Int64 based index position within an Automerge ObjType.List. Convert Prop into an AnyCodingKey using init(_:).",
    "summary" : "A type that represents a property on an object within an Automerge document.",
    "title" : "Prop"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/PathParseError\/failureReason"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from LocalizedError.failureReason. ",
    "summary" : "Inherited from LocalizedError.failureReason.",
    "title" : "failureReason"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/BooleanScalarConversionError\/Error-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Error Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/IntScalarConversionError\/localizedDescription"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from Error.localizedDescription. ",
    "summary" : "Inherited from Error.localizedDescription.",
    "title" : "localizedDescription"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Prop\/key(value:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "Prop.key(value:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AutomergeEncoder\/logLevel"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The level of information that the encoder writes to the unified logging system. ",
    "summary" : "The level of information that the encoder writes to the unified logging system.",
    "title" : "logLevel"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/applyEncodedChanges(encoded:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Apply encoded changes to the document.  The encoded changes to apply. Discussion The input to this function can be anything returned by save(), encodeNewChanges(), encodeChangesSince(heads:) or any concatenation of those. if you need to know what changed in the document as a result of the applied changes try using applyEncodedChangesWithPatches(encoded:)",
    "summary" : "Apply encoded changes to the document.",
    "title" : "applyEncodedChanges(encoded:)"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/SyncState\/init(bytes:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Create a sync state from data.  The data that represents a serialized sync state. Discussion Serialize a sync state using encode().",
    "summary" : "Create a sync state from data.",
    "title" : "init(bytes:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Value\/!=(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.!=(_:_:). ",
    "summary" : "Inherited from Equatable.!=(_:_:).",
    "title" : "!=(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeChangeHash_lift(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypeChangeHash_lift(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeLoadError"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypeLoadError"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AnyCodingKey\/hash(into:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Hashable.hash(into:). ",
    "summary" : "Inherited from Hashable.hash(into:).",
    "title" : "hash(into:)"
  },
  {
    "headings" : [
      "Return Value",
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/getAll(obj:index:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Get the set of possibly conflicting values at the index you provide for the array object you specify.  The identifier of the array object. The index position within the array. Return Value A set of the values at that index. Discussion If you request a index beyond the bounds of the array, this method throws an error.",
    "summary" : "Get the set of possibly conflicting values at the index you provide for the array object you specify.",
    "title" : "getAll(obj:index:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/getAllInList(obj:index:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "getAllInList(obj:index:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/DecodeSyncStateError\/Error-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Error Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/TimestampScalarConversionError"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A failure to convert an Automerge scalar value to or from a timestamp representation. ",
    "summary" : "A failure to convert an Automerge scalar value to or from a timestamp representation.",
    "title" : "TimestampScalarConversionError"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AnyCodingKey\/Hashable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Hashable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/ObservableObject-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "ObservableObject Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeKeyValue_lower(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypeKeyValue_lower(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/LogVerbosity\/...(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Comparable....(_:_:). ",
    "summary" : "Inherited from Comparable....(_:_:).",
    "title" : "...(_:_:)"
  },
  {
    "headings" : [
      "Return Value",
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/keysAt(obj:heads:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Get a historical list of the keys available for the dictionary object and point in time you specify.  The identifier of the dictionary object. The set of ChangeHash that represents a point of time in the history the document. Return Value The set of keys for the dictionary at the point in time you specify. Discussion Use the method heads() to capture a specific point in time in order to use this method.",
    "summary" : "Get a historical list of the keys available for the dictionary object and point in time you specify.",
    "title" : "keysAt(obj:heads:)"
  },
  {
    "headings" : [
      "Return Value"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/cursorPosition(obj:cursor:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The current position of the cursor for the list or text object you provide.  The object identifier of the list or text object. The cursor created for this list or text object Return Value The index position of a list, or the index position of the UTF-8 view in the string, of the cursor.",
    "summary" : "The current position of the cursor for the list or text object you provide.",
    "title" : "cursorPosition(obj:cursor:)"
  },
  {
    "headings" : [
      "Return Value",
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/valuesAt(obj:heads:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Get a historical list of the values for the array or dictionary object and point in time you specify.  The identifier of an array or dictionary object. The set of ChangeHash that represents a point of time in the history the document. Return Value For an array object, the list of all current values. For a dictionary object, the list of the values for all the keys. Discussion Use the method heads() to capture a specific point in time in order to use this method.",
    "summary" : "Get a historical list of the values for the array or dictionary object and point in time you specify.",
    "title" : "valuesAt(obj:heads:)"
  },
  {
    "headings" : [
      "Return Value",
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/getAllAt(obj:index:heads:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Get the historical value at of the index you provide, in the array object and point of time you specify.  The identifier of the array object. The index position within the array. The set of ChangeHash that represents a point of time in the history the document. Return Value The set of possibly conflicting values of the index at the point in time you provide. Discussion Use the method heads() to capture a specific point in time in order to use this method.",
    "summary" : "Get the historical value at of the index you provide, in the array object and point of time you specify.",
    "title" : "getAllAt(obj:index:heads:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ActorId\/!=(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.!=(_:_:). ",
    "summary" : "Inherited from Equatable.!=(_:_:).",
    "title" : "!=(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/DocError\/LocalizedError-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "LocalizedError Implementations"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/SchemaStrategy\/override"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Creates schema, irregardless of existing schema.  Discussion Disregards any existing schema that currently exists in the Automerge document and overwrites the path elements as the encoding progresses. This option will potentially change the schema within an Automerge document.",
    "summary" : "Creates schema, irregardless of existing schema.",
    "title" : "SchemaStrategy.override"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Change\/actorId"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "actorId"
  },
  {
    "headings" : [
      "Overview",
      "Overview"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/PathElement"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A component of the path to an object within a document.  Overview A path constructed of PathElement instances represents the sequence of navigating through a hierarchical structure of objects within an Automerge document. The base of this tree structure is  ROOT. Overview PathElement is a unique location identifer within an Automerge document. An individual element is made up of the property obj (an ObjId) and prop (a Prop). An array of PathElement provides an Automerge document specific path to tracing to a specific schema location. An array of PathElement is returned by path(obj:). Use stringPath() on an array of PathElement to convert it into a String. The format of this string is matched to the method lookupPath(path:) to look up the ObjId within the Automerge document. The following code snippet illustrates getting an array of PathElement and converting it into a String: ",
    "summary" : "A component of the path to an object within a document.",
    "title" : "PathElement"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeObjId_lower(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypeObjId_lower(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ScalarValue\/Uint(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "An unsigned integer. ",
    "summary" : "An unsigned integer.",
    "title" : "ScalarValue.Uint(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/LoadError\/localizedDescription"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from Error.localizedDescription. ",
    "summary" : "Inherited from Error.localizedDescription.",
    "title" : "localizedDescription"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypePatch\/read(from:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.read(from:). ",
    "summary" : "Inherited from FfiConverter.read(from:).",
    "title" : "read(from:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/splice(obj:start:delete:values:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "splice(obj:start:delete:values:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/IntScalarConversionError\/notIntValue(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "IntScalarConversionError.notIntValue(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Prop\/Equatable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Equatable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeActorId\/lift(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.lift(_:). ",
    "summary" : "Inherited from FfiConverter.lift(_:).",
    "title" : "lift(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeChangeHash_lower(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypeChangeHash_lower(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/TimestampScalarConversionError\/Error-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Error Implementations"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AnyCodingKey\/init(intValue:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Creates a new schema path element for an un-keyed container using the index you provide.  The index position for an un-keyed container. Discussion For a non-failable initializer for AnyCodingKey, use init(_:).",
    "summary" : "Creates a new schema path element for an un-keyed container using the index you provide.",
    "title" : "init(intValue:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeKeyValue"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypeKeyValue"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeValue\/read(from:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.read(from:). ",
    "summary" : "Inherited from FfiConverter.read(from:).",
    "title" : "read(from:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/SyncState\/reset()"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from SyncStateProtocol.reset(). ",
    "summary" : "Inherited from SyncStateProtocol.reset().",
    "title" : "reset()"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/DeleteSeq\/length"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The number of elements to delete. ",
    "summary" : "The number of elements to delete.",
    "title" : "length"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/CodingKeyLookupError\/!=(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.!=(_:_:). ",
    "summary" : "Inherited from Equatable.!=(_:_:).",
    "title" : "!=(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeLoadError\/write(_:into:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.write(_:into:). ",
    "summary" : "Inherited from FfiConverter.write(_:into:).",
    "title" : "write(_:into:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/mergeWithPatches(other:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.mergeWithPatches(other:). ",
    "summary" : "Inherited from DocProtocol.mergeWithPatches(other:).",
    "title" : "mergeWithPatches(other:)"
  },
  {
    "headings" : [
      "Return Value"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/cursorAt(obj:position:heads:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Establish a cursor at the position and point of time you specify in the list or text object you provide.  The object identifier of the list or text object. The index position in the list, or index of the UTF-8 view in the string for a text object. The set of ChangeHash that represents a point of time in the history the document. Return Value A cursor that references the position and point in time you specified.",
    "summary" : "Establish a cursor at the position and point of time you specify in the list or text object you provide.",
    "title" : "cursorAt(obj:position:heads:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/root()"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "root()"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/receiveSyncMessage(state:msg:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.receiveSyncMessage(state:msg:). ",
    "summary" : "Inherited from DocProtocol.receiveSyncMessage(state:msg:).",
    "title" : "receiveSyncMessage(state:msg:)"
  },
  {
    "headings" : [
      "Overview"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/LogVerbosity"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A type that indicates the amount of logging to be exposed from the Automerge library.  Overview The AutomergeEncoder accepts a configuration value that indicates the level of logging that the library sends through the unified logging framework. The default value is LogVerbosity.errorOnly. Use the value LogVerbosity.debug or LogVerbosity.tracing to get more extensive tracing of the encoding process.",
    "summary" : "A type that indicates the amount of logging to be exposed from the Automerge library.",
    "title" : "LogVerbosity"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/ScalarValue\/boolean(value:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "ScalarValue.boolean(value:)"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Mark\/init(start:end:name:value:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Creates a new mark.  The distance from the start of the string in unicode scalars where the function starts the mark. The distance from the start of the string in unicode scalars where the function ends the mark. The name of the mark. The value associated with the mark. Discussion If you use or receive a Swift String.Index convert it to an index position usable by Automerge through UnicodeScalarView, accessible through the unicodeScalars property on the string. To determine Automerge index position from a String.Index, convert the index position into a String.UnicodeScalarView.Index and calculate the distance from the startIndex value. An example of deriving the automerge start position from a Swift string’s index:  For the length of index updates in Automerge, use the count of the string’s UnicodeScalarView, converted to Int64. For example: ",
    "summary" : "Creates a new mark.",
    "title" : "init(start:end:name:value:)"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AutomergeText\/bind(doc:path:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Binds a text reference instance info an Automerge document.  The Automerge document associated with this reference. A string path that represents a Text container within the Automerge document. Discussion If the instance has an initial value other than an empty string, binding update the string within the Automerge document.",
    "summary" : "Binds a text reference instance info an Automerge document.",
    "title" : "bind(doc:path:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AutomergeText\/Equatable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Equatable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/KeyValue\/init(key:value:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "init(key:value:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeExpandMark_lower(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypeExpandMark_lower(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/DeleteSeq\/obj"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The object to which the delete applies. ",
    "summary" : "The object to which the delete applies.",
    "title" : "obj"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeMark\/write(_:into:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.write(_:into:). ",
    "summary" : "Inherited from FfiConverter.write(_:into:).",
    "title" : "write(_:into:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeValue_lift(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypeValue_lift(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AnyCodingKey\/Equatable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Equatable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/setActor(actor:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "setActor(actor:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ObjId\/debugDescription"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from CustomDebugStringConvertible.debugDescription. ",
    "summary" : "Inherited from CustomDebugStringConvertible.debugDescription.",
    "title" : "debugDescription"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/putInList(obj:index:value:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.putInList(obj:index:value:). ",
    "summary" : "Inherited from DocProtocol.putInList(obj:index:value:).",
    "title" : "putInList(obj:index:value:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ScalarValue\/Equatable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Equatable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/forkAt(heads:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.forkAt(heads:). ",
    "summary" : "Inherited from DocProtocol.forkAt(heads:).",
    "title" : "forkAt(heads:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Cursor\/!=(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.!=(_:_:). ",
    "summary" : "Inherited from Equatable.!=(_:_:).",
    "title" : "!=(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/getInMap(obj:key:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "getInMap(obj:key:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/putObjectInList(obj:index:objType:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "putObjectInList(obj:index:objType:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/LogVerbosity\/debug"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Logs include debugging and informational detail. ",
    "summary" : "Logs include debugging and informational detail.",
    "title" : "LogVerbosity.debug"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeObjType\/write(_:into:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.write(_:into:). ",
    "summary" : "Inherited from FfiConverter.write(_:into:).",
    "title" : "write(_:into:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/LogVerbosity\/.._(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Comparable...<(_:_:). ",
    "summary" : "Inherited from Comparable...<(_:_:).",
    "title" : "..<(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/deleteInMap(obj:key:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.deleteInMap(obj:key:). ",
    "summary" : "Inherited from DocProtocol.deleteInMap(obj:key:).",
    "title" : "deleteInMap(obj:key:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/DeleteSeq\/index"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The index location of the start of the deletion. ",
    "summary" : "The index location of the start of the deletion.",
    "title" : "index"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AnyCodingKey\/intValue"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The integer value of this schema path element.  Discussion If nil, the schema path element is expected to be a string that represents a key for a keyed container.",
    "summary" : "The integer value of this schema path element.",
    "title" : "intValue"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/CodingKeyLookupError\/helpAnchor"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from LocalizedError.helpAnchor. ",
    "summary" : "Inherited from LocalizedError.helpAnchor.",
    "title" : "helpAnchor"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeObjType_lift(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypeObjType_lift(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Value\/Equatable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Equatable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/save()"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "save()"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Patch\/Equatable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Equatable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/LogVerbosity\/hash(into:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from RawRepresentable.hash(into:). ",
    "summary" : "Inherited from RawRepresentable.hash(into:).",
    "title" : "hash(into:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AutomergeDecoder\/userInfo"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The user info dictionary for the decoder. ",
    "summary" : "The user info dictionary for the decoder.",
    "title" : "userInfo"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DecodeSyncStateError"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "DecodeSyncStateError"
  },
  {
    "headings" : [
      "Return Value",
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/getAt(obj:key:heads:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Get the historical value of the key you provide, in the dictionary object and point in time you specify.  The identifier of the dictionary object. The key within the dictionary. The set of ChangeHash that represents a point of time in the history the document. Return Value The value of the key at the point in time you provide, or nil if the key doesn’t exist in the dictionary. Discussion Use the method heads() to capture a specific point in time in order to use this method. Note that if there are multiple conflicting values this method will return one of them  arbitrarily (but deterministically). If you need all the conflicting values see getAllAt(obj:key:heads:)",
    "summary" : "Get the historical value of the key you provide, in the dictionary object and point in time you specify.",
    "title" : "getAt(obj:key:heads:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/getAtInMap(obj:key:heads:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "getAtInMap(obj:key:heads:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/increment(obj:index:by:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Increment or decrement a counter refrerenced at the index you provide in the array object you specify.  The identifier of the array object that holds the counter. The index position in the array object that references the counter. The amount to increment, or decrement, the counter.",
    "summary" : "Increment or decrement a counter refrerenced at the index you provide in the array object you specify.",
    "title" : "increment(obj:index:by:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/lengthAt(obj:heads:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "lengthAt(obj:heads:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/cursor(obj:position:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "cursor(obj:position:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/PatchAction\/put(obj:prop:value:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "PatchAction.put(obj:prop:value:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/BindingError\/recoverySuggestion"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from LocalizedError.recoverySuggestion. ",
    "summary" : "Inherited from LocalizedError.recoverySuggestion.",
    "title" : "recoverySuggestion"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/PathParseError\/EmptyListIndex(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The path element, structured as a Index location, doesn’t include an index value. ",
    "summary" : "The path element, structured as a Index location, doesn’t include an index value.",
    "title" : "PathParseError.EmptyListIndex(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/CodingKeyLookupError\/InvalidIndexLookup(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The path provided to look up an index is invalid. ",
    "summary" : "The path provided to look up an index is invalid.",
    "title" : "CodingKeyLookupError.InvalidIndexLookup(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/length(obj:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns the current length of the array, dictionary, or text object you specify.  The identifier of an array, dictionary, or text object.",
    "summary" : "Returns the current length of the array, dictionary, or text object you specify.",
    "title" : "length(obj:)"
  },
  {
    "headings" : [
      "Return Value"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/encodeNewChanges()"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns the binary encoding of the changes since the last call to this method.  Return Value Encoded changes suitable for sending over the network and applying to another document using applyEncodedChanges(encoded:).",
    "summary" : "Returns the binary encoding of the changes since the last call to this method.",
    "title" : "encodeNewChanges()"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Value\/scalar(value:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "Value.scalar(value:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AnyCodingKey\/!=(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.!=(_:_:). ",
    "summary" : "Inherited from Equatable.!=(_:_:).",
    "title" : "!=(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/cursorPosition(obj:cursor:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "cursorPosition(obj:cursor:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/PathElement\/!=(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.!=(_:_:). ",
    "summary" : "Inherited from Equatable.!=(_:_:).",
    "title" : "!=(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/DecodeSyncStateError\/localizedDescription"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from Error.localizedDescription. ",
    "summary" : "Inherited from Error.localizedDescription.",
    "title" : "localizedDescription"
  },
  {
    "headings" : [
      "Overview"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AutomergeText"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A reference to a Text object within an Automerge document.  Overview AutomergeText is a reference type that points to a ObjType.Text object within an Automerge document. Use AutomergeDecoder to return this type within your data model. You can create an initialize a Text object by creating an instance, then calling bind(doc:path:) with the location to link it into an Automerge document. You can also use the init(doc:objId:) initializer to get an instance directly. You don’t need to decode new instances to get updated values for Text objects within an Automerge document after syncing or merging. Use the value property to get the latest value from the Automerge document, or set an updated value using the same property. Use textBinding() to vend an instance of Binding<String> to use with SwiftUI text input controls.",
    "summary" : "A reference to a Text object within an Automerge document.",
    "title" : "AutomergeText"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/TimestampScalarConversionError\/recoverySuggestion"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from LocalizedError.recoverySuggestion. ",
    "summary" : "Inherited from LocalizedError.recoverySuggestion.",
    "title" : "recoverySuggestion"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypePathElement"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypePathElement"
  },
  {
    "headings" : [
      "Return Value"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ScalarValueRepresentable\/toScalarValue()"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Converts a local type into an Automerge scalar value.  Return Value The ScalarValue that aligns with the provided type",
    "summary" : "Converts a local type into an Automerge scalar value.",
    "title" : "toScalarValue()"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/PathElement\/obj"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "obj"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ScalarValue\/Null"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A null. ",
    "summary" : "A null.",
    "title" : "ScalarValue.Null"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/lengthAt(obj:heads:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.lengthAt(obj:heads:). ",
    "summary" : "Inherited from DocProtocol.lengthAt(obj:heads:).",
    "title" : "lengthAt(obj:heads:)"
  },
  {
    "headings" : [
      "Return Value"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/putObject(obj:key:ty:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Set or update an object within a dictionary object you specify.  The identifier of the dictionary object to update. The key of the property to update. The type of object to add to the dictionary. Return Value The object Id that references the object added.",
    "summary" : "Set or update an object within a dictionary object you specify.",
    "title" : "putObject(obj:key:ty:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AutomergeEncoder\/encode(_:)-3sde1"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Encodes an optional value you provide into the encoder’s Automerge document.  The value to encode.",
    "summary" : "Encodes an optional value you provide into the encoder’s Automerge document.",
    "title" : "encode(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/IntScalarConversionError\/errorDescription"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A localized message describing what error occurred. ",
    "summary" : "A localized message describing what error occurred.",
    "title" : "errorDescription"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/TimestampScalarConversionError\/failureReason"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A localized message describing the reason for the failure. ",
    "summary" : "A localized message describing the reason for the failure.",
    "title" : "failureReason"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AutomergeEncoder\/cautiousWrite"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A Boolean value that indicates whether to verify existing value types match the type being encoded. ",
    "summary" : "A Boolean value that indicates whether to verify existing value types match the type being encoded.",
    "title" : "cautiousWrite"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/forkAt(heads:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "forkAt(heads:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocError\/recoverySuggestion"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from LocalizedError.recoverySuggestion. ",
    "summary" : "Inherited from LocalizedError.recoverySuggestion.",
    "title" : "recoverySuggestion"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/UIntScalarConversionError\/errorDescription"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A localized message describing what error occurred. ",
    "summary" : "A localized message describing what error occurred.",
    "title" : "errorDescription"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/ObjType\/text"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "ObjType.text"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/BindingError\/errorDescription"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A localized message describing the error. ",
    "summary" : "A localized message describing the error.",
    "title" : "errorDescription"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/mark(obj:start:end:expand:name:value:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Add or remove a mark to a given range of text  The identifier of the text object to which to add the mark. The distance from the start of the string in unicode scalars where the function starts the mark. The distance from the start of the string in unicode scalars where the function ends the mark. How the mark should expand when text is inserted at the beginning or end of the range The name of the mark, for example “bold”. The scalar value to associate with the mark. Discussion To remove an existing mark between two index positions, set the name to the same value as the existing mark and set the value to the scalar value ScalarValue.Null. If you use or receive a Swift String.Index convert it to an index position usable by Automerge through UnicodeScalarView, accessible through the unicodeScalars property on the string. To determine Automerge index position from a String.Index, convert the index position into a String.UnicodeScalarView.Index and calculate the distance from the startIndex value. An example of deriving the automerge start position from a Swift string’s index:  For the length of index updates in Automerge, use the count of the string’s UnicodeScalarView, converted to Int64. For example: ",
    "summary" : "Add or remove a mark to a given range of text",
    "title" : "mark(obj:start:end:expand:name:value:)"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/SyncState\/encode()"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Serialize this sync state  Discussion The serialized representation does not include session data which depends on reliable in-order delivery. That is, you don’o’t need to call reset() on a decoded sync state.",
    "summary" : "Serialize this sync state",
    "title" : "encode()"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeChangeHash\/read(from:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.read(from:). ",
    "summary" : "Inherited from FfiConverter.read(from:).",
    "title" : "read(from:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AutomergeText\/init(from:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Decodable.init(from:). ",
    "summary" : "Inherited from Decodable.init(from:).",
    "title" : "init(from:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/StringScalarConversionError\/notstringValue(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "StringScalarConversionError.notstringValue(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeActorId\/lower(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.lower(_:). ",
    "summary" : "Inherited from FfiConverter.lower(_:).",
    "title" : "lower(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ScalarValue\/Int(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A signed integer. ",
    "summary" : "A signed integer.",
    "title" : "ScalarValue.Int(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/KeyValue\/!=(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.!=(_:_:). ",
    "summary" : "Inherited from Equatable.!=(_:_:).",
    "title" : "!=(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Patch\/hash(into:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Hashable.hash(into:). ",
    "summary" : "Inherited from Hashable.hash(into:).",
    "title" : "hash(into:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypePatchAction_lower(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypePatchAction_lower(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/CodingKeyLookupError\/errorDescription"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A localized message describing the error. ",
    "summary" : "A localized message describing the error.",
    "title" : "errorDescription"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/getAllInMap(obj:key:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.getAllInMap(obj:key:). ",
    "summary" : "Inherited from DocProtocol.getAllInMap(obj:key:).",
    "title" : "getAllInMap(obj:key:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/PathElement\/Equatable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Equatable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/CodingKeyLookupError\/Equatable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Equatable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/BooleanScalarConversionError\/notboolScalarValue(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "BooleanScalarConversionError.notboolScalarValue(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ActorId\/Equatable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Equatable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeProp\/read(from:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.read(from:). ",
    "summary" : "Inherited from FfiConverter.read(from:).",
    "title" : "read(from:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/Transferable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Transferable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Change\/Hashable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Hashable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/BytesScalarConversionError\/helpAnchor"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from LocalizedError.helpAnchor. ",
    "summary" : "Inherited from LocalizedError.helpAnchor.",
    "title" : "helpAnchor"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeDocError\/read(from:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.read(from:). ",
    "summary" : "Inherited from FfiConverter.read(from:).",
    "title" : "read(from:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Value\/Object(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "An object type ",
    "summary" : "An object type",
    "title" : "Value.Object(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/PathElement\/==(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.==(_:_:). ",
    "summary" : "Inherited from Equatable.==(_:_:).",
    "title" : "==(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/setActor(actor:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.setActor(actor:). ",
    "summary" : "Inherited from DocProtocol.setActor(actor:).",
    "title" : "setActor(actor:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DecodeSyncStateError\/Error-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Error Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/BytesScalarConversionError\/Error-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Error Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ObjType\/debugDescription"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from CustomDebugStringConvertible.debugDescription. ",
    "summary" : "Inherited from CustomDebugStringConvertible.debugDescription.",
    "title" : "debugDescription"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/LoadError\/localizedDescription"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from Error.localizedDescription. ",
    "summary" : "Inherited from Error.localizedDescription.",
    "title" : "localizedDescription"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AutomergeDecoder\/doc"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The instance of the an Automerge document to decode from. ",
    "summary" : "The instance of the an Automerge document to decode from.",
    "title" : "doc"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocError\/LocalizedError-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "LocalizedError Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Mark\/name"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The name of the mark. ",
    "summary" : "The name of the mark.",
    "title" : "name"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/put(obj:index:value:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Set or update a value within an array object you specify.  The identifier of the array object to update. The index value of the array to update. The value to set for the index you provide. Discussion If the index position doesn’t yet exist within the array, this method will throw an error. To add an object that extends the array, use the method insert(obj:index:value:) If the object you update is a ScalarValue.Counter(_:), calling this function uniformly sets the value and ignores any previous increments or decrements of the value. If you intent to update the counter by a fixed amount, use the method increment(obj:key:by:) instead.",
    "summary" : "Set or update a value within an array object you specify.",
    "title" : "put(obj:index:value:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/newWithActor(actor:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "newWithActor(actor:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeSyncState\/read(from:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.read(from:). ",
    "summary" : "Inherited from FfiConverter.read(from:).",
    "title" : "read(from:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ObjId\/Equatable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Equatable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/CodingKeyLookupError\/IndexOutOfBounds(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The list index requested was longer than the list in the Document. ",
    "summary" : "The list index requested was longer than the list in the Document.",
    "title" : "CodingKeyLookupError.IndexOutOfBounds(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Change\/hash(into:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Hashable.hash(into:). ",
    "summary" : "Inherited from Hashable.hash(into:).",
    "title" : "hash(into:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/LogVerbosity\/_(_:_:)-1i3hg"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Comparable.>(_:_:). ",
    "summary" : "Inherited from Comparable.>(_:_:).",
    "title" : ">(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/SyncState\/encode()"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from SyncStateProtocol.encode(). ",
    "summary" : "Inherited from SyncStateProtocol.encode().",
    "title" : "encode()"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AutomergeText\/hash(into:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Hashable.hash(into:). ",
    "summary" : "Inherited from Hashable.hash(into:).",
    "title" : "hash(into:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/SyncStateProtocol\/encode()"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "encode()"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/cursorAt(obj:position:heads:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "cursorAt(obj:position:heads:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/ExpandMark\/both"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "ExpandMark.both"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/PatchAction\/Marks(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Add marks to a text object. ",
    "summary" : "Add marks to a text object.",
    "title" : "PatchAction.Marks(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/insertObjectInList(obj:index:objType:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.insertObjectInList(obj:index:objType:). ",
    "summary" : "Inherited from DocProtocol.insertObjectInList(obj:index:objType:).",
    "title" : "insertObjectInList(obj:index:objType:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/LoadError\/Error-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Error Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DecodeSyncStateError\/Equatable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Equatable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/PathParseError\/errorDescription"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A localized message describing the error. ",
    "summary" : "A localized message describing the error.",
    "title" : "errorDescription"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeValue"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypeValue"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeObjId\/lower(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.lower(_:). ",
    "summary" : "Inherited from FfiConverter.lower(_:).",
    "title" : "lower(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/LogVerbosity\/init(rawValue:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from RawRepresentable.init(rawValue:). ",
    "summary" : "Inherited from RawRepresentable.init(rawValue:).",
    "title" : "init(rawValue:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/StringScalarConversionError\/localizedDescription"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from Error.localizedDescription. ",
    "summary" : "Inherited from Error.localizedDescription.",
    "title" : "localizedDescription"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeObjId\/lift(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.lift(_:). ",
    "summary" : "Inherited from FfiConverter.lift(_:).",
    "title" : "lift(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/path(obj:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "path(obj:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ObjId\/CustomDebugStringConvertible-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "CustomDebugStringConvertible Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/PathParseError\/recoverySuggestion"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from LocalizedError.recoverySuggestion. ",
    "summary" : "Inherited from LocalizedError.recoverySuggestion.",
    "title" : "recoverySuggestion"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ExpandMark\/!=(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.!=(_:_:). ",
    "summary" : "Inherited from Equatable.!=(_:_:).",
    "title" : "!=(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeChange_lower(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypeChange_lower(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "DocProtocol"
  },
  {
    "headings" : [
      "Return Value"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/keys(obj:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Get a list of all the current keys available for the dictionary object you specify.  The identifier of the dictionary object. Return Value The keys for that dictionary.",
    "summary" : "Get a list of all the current keys available for the dictionary object you specify.",
    "title" : "keys(obj:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AnyCodingKey\/init(_:)-uo0"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Creates a generalized Coding Key from an Automerge Path Element.  The Automerge path element to convert.",
    "summary" : "Creates a generalized Coding Key from an Automerge Path Element.",
    "title" : "init(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Patch\/==(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.==(_:_:). ",
    "summary" : "Inherited from Equatable.==(_:_:).",
    "title" : "==(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/mapEntries(obj:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "mapEntries(obj:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ReceiveSyncError\/localizedDescription"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from Error.localizedDescription. ",
    "summary" : "Inherited from Error.localizedDescription.",
    "title" : "localizedDescription"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/spliceText(obj:start:delete:chars:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.spliceText(obj:start:delete:chars:). ",
    "summary" : "Inherited from DocProtocol.spliceText(obj:start:delete:chars:).",
    "title" : "spliceText(obj:start:delete:chars:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeDoc"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypeDoc"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/getAtInList(obj:index:heads:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.getAtInList(obj:index:heads:). ",
    "summary" : "Inherited from DocProtocol.getAtInList(obj:index:heads:).",
    "title" : "getAtInList(obj:index:heads:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AutomergeDecoder\/init(doc:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Creates a new instance of an Automerge decoder.  An instance of the document to decode types from.",
    "summary" : "Creates a new instance of an Automerge decoder.",
    "title" : "init(doc:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/updateText(obj:chars:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "updateText(obj:chars:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/deleteInList(obj:index:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "deleteInList(obj:index:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/ObjType\/list"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "ObjType.list"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/cursorPositionAt(obj:cursor:heads:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "cursorPositionAt(obj:cursor:heads:)"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AnyCodingKey\/init(stringValue:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Creates a new schema path element for a keyed container using the string you provide.  The key for a keyed container. Discussion For a non-failable initializer for AnyCodingKey, use init(_:).",
    "summary" : "Creates a new schema path element for a keyed container using the string you provide.",
    "title" : "init(stringValue:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/ObjType"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "ObjType"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/applyEncodedChangesWithPatches(changes:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.applyEncodedChangesWithPatches(changes:). ",
    "summary" : "Inherited from DocProtocol.applyEncodedChangesWithPatches(changes:).",
    "title" : "applyEncodedChangesWithPatches(changes:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/ReceiveSyncError"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "ReceiveSyncError"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypePatch_lower(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypePatch_lower(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/encodeChangesSince(heads:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "encodeChangesSince(heads:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Patch\/!=(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.!=(_:_:). ",
    "summary" : "Inherited from Equatable.!=(_:_:).",
    "title" : "!=(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ScalarValue\/description"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from CustomStringConvertible.description. ",
    "summary" : "Inherited from CustomStringConvertible.description.",
    "title" : "description"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Value\/Scalar(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A scalar value ",
    "summary" : "A scalar value",
    "title" : "Value.Scalar(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/TimestampScalarConversionError\/LocalizedError-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "LocalizedError Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/SyncStateProtocol\/theirHeads()"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "theirHeads()"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/splice(obj:start:delete:values:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Splice an array of values into the array object you specify.  The identifier of the array object to update. The index where the splice method begins inserting or deleting. The number of elements to delete from the start index. If negative, the function deletes elements preceding start index, rather than following it. An array of values to insert after the start index.",
    "summary" : "Splice an array of values into the array object you specify.",
    "title" : "splice(obj:start:delete:values:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Counter\/encode(to:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Encodes the counter instance into the encoder instance you provide.  The encoder instance to write into.",
    "summary" : "Encodes the counter instance into the encoder instance you provide.",
    "title" : "encode(to:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/PatchAction\/Equatable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Equatable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/StringScalarConversionError\/recoverySuggestion"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from LocalizedError.recoverySuggestion. ",
    "summary" : "Inherited from LocalizedError.recoverySuggestion.",
    "title" : "recoverySuggestion"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/FloatingPointScalarConversionError\/recoverySuggestion"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from LocalizedError.recoverySuggestion. ",
    "summary" : "Inherited from LocalizedError.recoverySuggestion.",
    "title" : "recoverySuggestion"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/heads()"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns a set of change hashes that represents the current state of the document.  Discussion The number of change hashes in the returned set represents the number of concurrent changes the document tracks. The heads returned are the tips of the change graph managed by Automerge, so the number of heads is the number of concurrent changes at the tips of the graph. For example, if two peers make a change concurrently and sync with each other then the synced document will have two heads. As soon as one of them makes a change on top of the synced document it will return to one head, because the new change is not concurrent with the previous changes but causally succeeds them. In many ways heads returned by Automerge are analogous to heads in git in that the hashes returned identify commits in a graph of commits. The difference from git is that in git the heads can identify multiple points in the graph. Implementation details: The number of hashes in the document does increase linearly with the number of changes, but Automerge doesn’t encode the hashes into the output of that is provided when you invoke save(). Instead Automerge encodes the heads of the tips of the change graph and re-computes internal hashes, which means there is no storage cost for these hashes.",
    "summary" : "Returns a set of change hashes that represents the current state of the document.",
    "title" : "heads()"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeDoc_lift(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypeDoc_lift(_:)"
  },
  {
    "headings" : [
      "Return Value"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/mergeWithPatches(other:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Merge this document with other, returning a list of patches applied by the merge.  another Document Return Value A list of Patch the represent the changes applied when merging the other document.",
    "summary" : "Merge this document with other, returning a list of patches applied by the merge.",
    "title" : "mergeWithPatches(other:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeScalarValue_lift(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypeScalarValue_lift(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AutomergeText\/Hashable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Hashable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AutomergeText\/objectWillChange"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "13.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.15",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "13.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "6.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from ObservableObject.objectWillChange. ",
    "summary" : "Inherited from ObservableObject.objectWillChange.",
    "title" : "objectWillChange"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeScalarValue_lower(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypeScalarValue_lower(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/commitWith(message:timestamp:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Commit the auto-generated transaction with options.  An optional message to attach to the auto-committed change (if any). A timestamp to attach to the auto-committed change (if any), defaulting to Date().",
    "summary" : "Commit the auto-generated transaction with options.",
    "title" : "commitWith(message:timestamp:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Change\/message"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "An optional message associated with the change. ",
    "summary" : "An optional message associated with the change.",
    "title" : "message"
  },
  {
    "headings" : [
      "Return Value",
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/getAt(obj:index:heads:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Get the historical value at of the index you provide in the array object and point in time you specify.  The identifier of the array object. The index position within the array. The set of ChangeHash that represents a point of time in the history the document. Return Value The value of the index at the point in time you provide, or nil if the value doesn’t exist. Discussion Use the method heads() to capture a specific point in time in order to use this method. Note that if there are multiple conflicting values this method will return one of them  arbitrarily (but deterministically). If you need all the conflicting values see getAllAt(obj:index:heads:)",
    "summary" : "Get the historical value at of the index you provide in the array object and point in time you specify.",
    "title" : "getAt(obj:index:heads:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Cursor\/description"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The bytes that describe the cursor. ",
    "summary" : "The bytes that describe the cursor.",
    "title" : "description"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/mapEntriesAt(obj:heads:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.mapEntriesAt(obj:heads:). ",
    "summary" : "Inherited from DocProtocol.mapEntriesAt(obj:heads:).",
    "title" : "mapEntriesAt(obj:heads:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/KeyValue\/==(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.==(_:_:). ",
    "summary" : "Inherited from Equatable.==(_:_:).",
    "title" : "==(_:_:)"
  },
  {
    "headings" : [
      "Overview"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/DecodeSyncStateError"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "An error that indicates the synchronisation state could not be decoded.  Overview The error is specific to the Rust language binding infrastructure.",
    "summary" : "An error that indicates the synchronisation state could not be decoded.",
    "title" : "DecodeSyncStateError"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/DocError\/helpAnchor"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from LocalizedError.helpAnchor. ",
    "summary" : "Inherited from LocalizedError.helpAnchor.",
    "title" : "helpAnchor"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/BindingError\/NotText"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The Automerge object at the path provided was not a Text object. ",
    "summary" : "The Automerge object at the path provided was not a Text object.",
    "title" : "BindingError.NotText"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeDoc_lower(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypeDoc_lower(_:)"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AutomergeEncoder\/encode(_:at:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Encodes a value you provide into a specific location within the encoder’s Automerge document.  The value to encode The schema location within the document to encode the value. Discussion Use this method to encode individual values or types to specific locations within an Automerge document. The path parameter identifies the location, and when the encoder uses the SchemaStrategy.createWhenNeeded strategy, it creates container objects (arrays and dictionaries) as needed to write to the path if those paths don’t yet exist. The path parameter accepts any type conforming to the CodingKey protocol. This library provides a type-erased coding key, AnyCodingKey, and an initialization parser (parsePath(_:)) to interpret a string as a sequence of path elements. Use the combination of these types to conveniently specify where to write into the Automerge document. For example, the following code writes the string Henry into the name property of the first element in the root list referenced by the key example: ",
    "summary" : "Encodes a value you provide into a specific location within the encoder’s Automerge document.",
    "title" : "encode(_:at:)"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AutomergeDecoder\/decode(_:from:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns the type you specify, decoded from the Automerge document referenced by the decoder.  _ The type of the value to decode from the Automerge document. The path to the schema location within the Automerge document to attempt to decode into the type you provide. Discussion The path parameter accepts any type conforming to the CodingKey protocol. This library provides a type-erased coding key, AnyCodingKey, and an initialization parser (parsePath(_:)) to interpret a string as a sequence of path elements. Use the combination of these types to conveniently specify where to read from within an Automerge document. For example, the following code attempts to read a string from the name property of the first element in the root list referenced by the key example: ",
    "summary" : "Returns the type you specify, decoded from the Automerge document referenced by the decoder.",
    "title" : "decode(_:from:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/actorId()"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "actorId()"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/ScalarValue\/counter(value:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "ScalarValue.counter(value:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeProp\/write(_:into:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.write(_:into:). ",
    "summary" : "Inherited from FfiConverter.write(_:into:).",
    "title" : "write(_:into:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/LogVerbosity\/...(_:)-1o73a"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Comparable....(_:). ",
    "summary" : "Inherited from Comparable....(_:).",
    "title" : "...(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Value\/!=(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.!=(_:_:). ",
    "summary" : "Inherited from Equatable.!=(_:_:).",
    "title" : "!=(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/TimestampScalarConversionError\/notTimetampScalarValue(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "TimestampScalarConversionError.notTimetampScalarValue(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/FloatingPointScalarConversionError\/failureReason"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A localized message describing the reason for the failure. ",
    "summary" : "A localized message describing the reason for the failure.",
    "title" : "failureReason"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeKeyValue\/write(_:into:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.write(_:into:). ",
    "summary" : "Inherited from FfiConverter.write(_:into:).",
    "title" : "write(_:into:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Change\/Equatable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Equatable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/putObjectInMap(obj:key:objType:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.putObjectInMap(obj:key:objType:). ",
    "summary" : "Inherited from DocProtocol.putObjectInMap(obj:key:objType:).",
    "title" : "putObjectInMap(obj:key:objType:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Mark\/Equatable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Equatable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/PatchAction\/deleteSeq(obj:index:length:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "PatchAction.deleteSeq(obj:index:length:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/change(hash:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns the contents of the change associated with the change hash you provide. ",
    "summary" : "Returns the contents of the change associated with the change hash you provide.",
    "title" : "change(hash:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/save()"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.save(). ",
    "summary" : "Inherited from DocProtocol.save().",
    "title" : "save()"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/ReceiveSyncError\/Equatable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Equatable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/StringScalarConversionError\/helpAnchor"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from LocalizedError.helpAnchor. ",
    "summary" : "Inherited from LocalizedError.helpAnchor.",
    "title" : "helpAnchor"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/SyncState\/theirHeads"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The heads last reported by a peer.  Discussion Use receiveSyncMessage(state:message:) to update a sync state, which updates this value.",
    "summary" : "The heads last reported by a peer.",
    "title" : "theirHeads"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/getInList(obj:index:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.getInList(obj:index:). ",
    "summary" : "Inherited from DocProtocol.getInList(obj:index:).",
    "title" : "getInList(obj:index:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeSyncState\/lift(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.lift(_:). ",
    "summary" : "Inherited from FfiConverter.lift(_:).",
    "title" : "lift(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/BytesScalarConversionError\/errorDescription"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A localized message describing what error occurred. ",
    "summary" : "A localized message describing what error occurred.",
    "title" : "errorDescription"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/StringScalarConversionError\/LocalizedError-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "LocalizedError Implementations"
  },
  {
    "headings" : [
      "Overview"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ScalarValue"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A type that represents a primitive Automerge value.  Overview ScalarValue represents an Automerge primitive value as an enumeration with associated data. For an overview of working with these values, see Using the dynamic schema and core data model.",
    "summary" : "A type that represents a primitive Automerge value.",
    "title" : "ScalarValue"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeDocError"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypeDocError"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AnyCodingKey\/init(_:)-5azuh"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Creates a new schema path element for a keyed container using the string you provide.  The key for a keyed container.",
    "summary" : "Creates a new schema path element for a keyed container using the string you provide.",
    "title" : "init(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Counter\/valueBinding()"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns a binding to the string value of a text object within an Automerge document. ",
    "summary" : "Returns a binding to the string value of a text object within an Automerge document.",
    "title" : "valueBinding()"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeDecodeSyncStateError\/read(from:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.read(from:). ",
    "summary" : "Inherited from FfiConverter.read(from:).",
    "title" : "read(from:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/BindingError\/==(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.==(_:_:). ",
    "summary" : "Inherited from Equatable.==(_:_:).",
    "title" : "==(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/ScalarValue\/!=(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.!=(_:_:). ",
    "summary" : "Inherited from Equatable.!=(_:_:).",
    "title" : "!=(_:_:)"
  },
  {
    "headings" : [
      "Overview"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "An Automerge document that provides an interface to the document-structured data it contains.  Overview Store your data in the document-based data structure that Automerge provides, similar to representing it with JSON. Like JSON, you structure data with a combination of nested dictionaries and arrays, each of which store values or other container objects. For more detailed information about the types that Automerge stores, see Using the dynamic schema and core data model. Use methods on Document to save, load, fork, merge, and sync Automerge documents. In addition to working with the low-level methods, this library provides AutomergeEncoder and AutomergeDecoder, which provide support for mapping your own Codable types into an Automerge document.",
    "summary" : "An Automerge document that provides an interface to the document-structured data it contains.",
    "title" : "Document"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DecodeSyncStateError\/!=(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.!=(_:_:). ",
    "summary" : "Inherited from Equatable.!=(_:_:).",
    "title" : "!=(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/getInList(obj:index:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "getInList(obj:index:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/PathParseError\/localizedDescription"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from Error.localizedDescription. ",
    "summary" : "Inherited from Error.localizedDescription.",
    "title" : "localizedDescription"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/TimestampScalarConversionError\/notTimetampValue(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "TimestampScalarConversionError.notTimetampValue(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/PathParseError"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Path Parsing Errors ",
    "summary" : "Path Parsing Errors",
    "title" : "PathParseError"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/FloatingPointScalarConversionError\/notF64ScalarValue(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FloatingPointScalarConversionError.notF64ScalarValue(_:)"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/PatchAction\/Put(_:_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Put a new value at the property for the identified object.  Discussion The property included within the Put can be either an index to a sequence, or a key into a map.",
    "summary" : "Put a new value at the property for the identified object.",
    "title" : "PatchAction.Put(_:_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/StringScalarConversionError\/Error-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Error Implementations"
  },
  {
    "headings" : [
      "Return Value"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/fork()"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Fork the document.  Return Value A copy of the document with a new actor ID.",
    "summary" : "Fork the document.",
    "title" : "fork()"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/applyEncodedChanges(changes:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.applyEncodedChanges(changes:). ",
    "summary" : "Inherited from DocProtocol.applyEncodedChanges(changes:).",
    "title" : "applyEncodedChanges(changes:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeMark\/read(from:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.read(from:). ",
    "summary" : "Inherited from FfiConverter.read(from:).",
    "title" : "read(from:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/CodingKeyLookupError\/EmptyListIndex(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The path element, structured as a Index location, doesn’t include an index value. ",
    "summary" : "The path element, structured as a Index location, doesn’t include an index value.",
    "title" : "CodingKeyLookupError.EmptyListIndex(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/CodingKeyLookupError\/failureReason"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A localized message describing the reason for the failure. ",
    "summary" : "A localized message describing the reason for the failure.",
    "title" : "failureReason"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/SyncState\/init()"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Create a new, empty sync state. ",
    "summary" : "Create a new, empty sync state.",
    "title" : "init()"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/ReceiveSyncError\/localizedDescription"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from Error.localizedDescription. ",
    "summary" : "Inherited from Error.localizedDescription.",
    "title" : "localizedDescription"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/DeleteSeq\/Equatable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Equatable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeMark_lower(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypeMark_lower(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/BooleanScalarConversionError"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A failure to convert an Automerge scalar value to or from a Boolean representation. ",
    "summary" : "A failure to convert an Automerge scalar value to or from a Boolean representation.",
    "title" : "BooleanScalarConversionError"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Patch\/init(path:action:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "init(path:action:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/applyEncodedChangesWithPatches(changes:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "applyEncodedChangesWithPatches(changes:)"
  },
  {
    "headings" : [
      "Return Value"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/LogVerbosity\/_(_:_:)-5qdhi"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Determines whether the first verbosity level is less verbose than the second.  The first verbosity level to compare. The second verbosity level to compare. Return Value Returns true if the first verbosity level is less than the second.",
    "summary" : "Determines whether the first verbosity level is less verbose than the second.",
    "title" : "<(_:_:)"
  },
  {
    "headings" : [
      "Overview"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AutomergeDecoder"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A decoder that initializes codable-conforming types from an Automerge document.  Overview Use AutomergeDecoder to decode your data from an Automerge document. The following example illustrates decoding ColorList, a type that conforms to Codable, into an Automerge document: ",
    "summary" : "A decoder that initializes codable-conforming types from an Automerge document.",
    "title" : "AutomergeDecoder"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/values(obj:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "values(obj:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/merge(other:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.merge(other:). ",
    "summary" : "Inherited from DocProtocol.merge(other:).",
    "title" : "merge(other:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/ScalarValue\/bytes(value:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "ScalarValue.bytes(value:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeCursor\/lift(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.lift(_:). ",
    "summary" : "Inherited from FfiConverter.lift(_:).",
    "title" : "lift(_:)"
  },
  {
    "headings" : [
      "Overview",
      "Add Automerge-swift as a dependency",
      "Creating a Document",
      "Making Changes",
      "Saving the Document",
      "Forking and Merging Documents"
    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/FiveMinuteQuickstart"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A quick-start guide on how to use Automerge for your iOS or macOS app. Overview Use an Automerge document to store and merge changes to the data. You can store individuals values or entire models within Automerge. Encode and decide any model that conforms to the Codable protocol into an Automerge document. For example, the following code illustrates the model ColorList, that conforms to Codable, for this quick start:  See Using the dynamic schema and core data model for more details on the types that Automerge stores and how the library exposes those types in Swift. Add Automerge-swift as a dependency If you’re working with a Swift package, add Automerge-swift as a dependency to Package.swift:  If you’re working with an Xcode project, search for the swift package using the repository URL github.com\/automerge\/automerge-swift to add it as a dependency to iOS, macOS, or macCatalyst targets. Creating a Document The following example creates a new Automerge Document instance and uses AutomergeEncoder to store an instance of the ColorList model into it:  Making Changes As you make changes, store them into the Automerge document by encoding the updated model:  Automerge treats the changes you make as concurrent up until you save the document using save(). Saving the document compacts all the recent concurrent changes. See Tracking Changes and History for more information about tracking changes and a more compact way to synchronise document updates. Saving the Document In addition to compacting changes to an Automerge document, save() returns the entire document as a series of bytes (Data) that you can store locally or send over a network:  These bytes represent the entire document model stored in Document and its history of updates. Forking and Merging Documents Use init(_:logLevel:) to load the bytes of an Automerge document, to create a copy of the document:  You can also use the fork() to make a copy of the document in memory, without needing to store and re-load the bytes:  With a copy of the document, create an instance of AutomergeDecoder to retrieve and decode an instance of your model:  You can then make changes to your model and encode those changes into the Automerge document to store the updates.  Use the merge(other:) to merge changes made in the copy of the document back into the initial document:  Create an instance of AutomergeDecoder to decode and retrieve an instance of your model that reflects the updates stored in the Automerge document: ",
    "summary" : "A quick-start guide on how to use Automerge for your iOS or macOS app.",
    "title" : "Five Minute Quick Start"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Prop\/!=(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.!=(_:_:). ",
    "summary" : "Inherited from Equatable.!=(_:_:).",
    "title" : "!=(_:_:)"
  },
  {
    "headings" : [
      "Overview"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ActorId"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The identifier for collaborators contributing to an Automerge document.  Overview Each separate instance of an Automerge document should have it’s own, unique, ActorId. If you create your own ActorId, no concurrent changes should ever be made with the same ActorId.",
    "summary" : "The identifier for collaborators contributing to an Automerge document.",
    "title" : "ActorId"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ScalarValue\/F64(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A floating point number. ",
    "summary" : "A floating point number.",
    "title" : "ScalarValue.F64(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/mapKeysAt(obj:heads:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "mapKeysAt(obj:heads:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/changes()"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "changes()"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Patch\/!=(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.!=(_:_:). ",
    "summary" : "Inherited from Equatable.!=(_:_:).",
    "title" : "!=(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/BindingError\/failureReason"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from LocalizedError.failureReason. ",
    "summary" : "Inherited from LocalizedError.failureReason.",
    "title" : "failureReason"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeObjId\/write(_:into:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.write(_:into:). ",
    "summary" : "Inherited from FfiConverter.write(_:into:).",
    "title" : "write(_:into:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Counter\/Equatable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Equatable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/cursor(obj:position:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.cursor(obj:position:). ",
    "summary" : "Inherited from DocProtocol.cursor(obj:position:).",
    "title" : "cursor(obj:position:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/cursorPositionAt(obj:cursor:heads:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.cursorPositionAt(obj:cursor:heads:). ",
    "summary" : "Inherited from DocProtocol.cursorPositionAt(obj:cursor:heads:).",
    "title" : "cursorPositionAt(obj:cursor:heads:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/changeByHash(hash:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "changeByHash(hash:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/UIntScalarConversionError\/notUIntScalarValue(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "UIntScalarConversionError.notUIntScalarValue(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeObjId\/read(from:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.read(from:). ",
    "summary" : "Inherited from FfiConverter.read(from:).",
    "title" : "read(from:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/PatchAction\/spliceText(obj:index:value:marks:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "PatchAction.spliceText(obj:index:value:marks:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/BytesScalarConversionError\/recoverySuggestion"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from LocalizedError.recoverySuggestion. ",
    "summary" : "Inherited from LocalizedError.recoverySuggestion.",
    "title" : "recoverySuggestion"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Mark\/init(start:end:name:value:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "init(start:end:name:value:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeChangeHash"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypeChangeHash"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/PatchAction\/increment(obj:prop:value:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "PatchAction.increment(obj:prop:value:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/ScalarValue\/unknown(typeCode:data:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "ScalarValue.unknown(typeCode:data:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Prop\/!=(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.!=(_:_:). ",
    "summary" : "Inherited from Equatable.!=(_:_:).",
    "title" : "!=(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/TimestampScalarConversionError\/helpAnchor"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from LocalizedError.helpAnchor. ",
    "summary" : "Inherited from LocalizedError.helpAnchor.",
    "title" : "helpAnchor"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/BooleanScalarConversionError\/recoverySuggestion"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from LocalizedError.recoverySuggestion. ",
    "summary" : "Inherited from LocalizedError.recoverySuggestion.",
    "title" : "recoverySuggestion"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/BytesScalarConversionError"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A failure to convert an Automerge scalar value to or from a byte representation. ",
    "summary" : "A failure to convert an Automerge scalar value to or from a byte representation.",
    "title" : "BytesScalarConversionError"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/StringScalarConversionError\/notstringScalarValue(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "StringScalarConversionError.notstringScalarValue(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/insert(obj:index:value:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Insert a value, at the index you provide, into the array object you specify.  The identifier of the array object to update. The index value of the array to update. The value to insert for the index you provide.",
    "summary" : "Insert a value, at the index you provide, into the array object you specify.",
    "title" : "insert(obj:index:value:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/putInMap(obj:key:value:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.putInMap(obj:key:value:). ",
    "summary" : "Inherited from DocProtocol.putInMap(obj:key:value:).",
    "title" : "putInMap(obj:key:value:)"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/init(_:logLevel:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Creates a new document from the data that you provide.  A data buffer of encoded automerge changes. The level at which to generate logs into unified logging from actions within this document. Discussion Generate the data for a document by calling save(), The raw data format of an Automerge document is a series of changes, as such, you can concatenate multiple calls of encodeChangesSince(heads:), encodeNewChanges(), or any sequence of bytes containing valid encodings of automerge changes.",
    "summary" : "Creates a new document from the data that you provide.",
    "title" : "init(_:logLevel:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AutomergeEncoder\/schemaStrategy"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The strategy to use when encoding types into an Automerge document. ",
    "summary" : "The strategy to use when encoding types into an Automerge document.",
    "title" : "schemaStrategy"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Patch\/path"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "path"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/ObjId"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Typealias from the type name used in the UDL file to the builtin type.  This is needed because the UDL type name is used in function\/method signatures. ",
    "summary" : "Typealias from the type name used in the UDL file to the builtin type.  This is needed because the UDL type name is used in function\/method signatures.",
    "title" : "ObjId"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/ChangeHash"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Typealias from the type name used in the UDL file to the builtin type.  This is needed because the UDL type name is used in function\/method signatures. ",
    "summary" : "Typealias from the type name used in the UDL file to the builtin type.  This is needed because the UDL type name is used in function\/method signatures.",
    "title" : "ChangeHash"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/cursorPosition(obj:cursor:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.cursorPosition(obj:cursor:). ",
    "summary" : "Inherited from DocProtocol.cursorPosition(obj:cursor:).",
    "title" : "cursorPosition(obj:cursor:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/PatchAction\/deleteMap(obj:key:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "PatchAction.deleteMap(obj:key:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/ExpandMark\/Equatable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Equatable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/changeByHash(hash:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.changeByHash(hash:). ",
    "summary" : "Inherited from DocProtocol.changeByHash(hash:).",
    "title" : "changeByHash(hash:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/PathElement\/init(prop:obj:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "init(prop:obj:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/ExpandMark\/!=(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.!=(_:_:). ",
    "summary" : "Inherited from Equatable.!=(_:_:).",
    "title" : "!=(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/UIntScalarConversionError\/Error-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Error Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/DocError\/localizedDescription"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from Error.localizedDescription. ",
    "summary" : "Inherited from Error.localizedDescription.",
    "title" : "localizedDescription"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ObjId\/ROOT"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The root identifier for an Automerge document. ",
    "summary" : "The root identifier for an Automerge document.",
    "title" : "ROOT"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/ScalarValue\/timestamp(value:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "ScalarValue.timestamp(value:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Prop\/index(value:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "Prop.index(value:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/LogVerbosity\/Comparable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Comparable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeExpandMark\/read(from:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.read(from:). ",
    "summary" : "Inherited from FfiConverter.read(from:).",
    "title" : "read(from:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Change\/bytes"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The encoded bytes of the change operation. ",
    "summary" : "The encoded bytes of the change operation.",
    "title" : "bytes"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/applyEncodedChanges(changes:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "applyEncodedChanges(changes:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Value\/debugDescription"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from CustomDebugStringConvertible.debugDescription. ",
    "summary" : "Inherited from CustomDebugStringConvertible.debugDescription.",
    "title" : "debugDescription"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/merge(other:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Merge this document with another.  another Document Discussion If you need to know what changed in the document as a result of the merge, use the method mergeWithPatches(other:) instead.",
    "summary" : "Merge this document with another.",
    "title" : "merge(other:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Cursor"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Typealias from the type name used in the UDL file to the builtin type.  This is needed because the UDL type name is used in function\/method signatures. ",
    "summary" : "Typealias from the type name used in the UDL file to the builtin type.  This is needed because the UDL type name is used in function\/method signatures.",
    "title" : "Cursor"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Change\/!=(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.!=(_:_:). ",
    "summary" : "Inherited from Equatable.!=(_:_:).",
    "title" : "!=(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/PatchAction\/Equatable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Equatable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/LogVerbosity\/.._(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Comparable...<(_:). ",
    "summary" : "Inherited from Comparable...<(_:).",
    "title" : "..<(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/LoadError\/!=(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.!=(_:_:). ",
    "summary" : "Inherited from Equatable.!=(_:_:).",
    "title" : "!=(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/length(obj:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "length(obj:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/PatchAction\/!=(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.!=(_:_:). ",
    "summary" : "Inherited from Equatable.!=(_:_:).",
    "title" : "!=(_:_:)"
  },
  {
    "headings" : [
      "Return Value"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/marks(obj:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns the current list of marks for a text object.  The identifier of the text object. Return Value The current list of Mark for the text object.",
    "summary" : "Returns the current list of marks for a text object.",
    "title" : "marks(obj:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/marks(obj:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.marks(obj:). ",
    "summary" : "Inherited from DocProtocol.marks(obj:).",
    "title" : "marks(obj:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/PathElement\/hash(into:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Hashable.hash(into:). ",
    "summary" : "Inherited from Hashable.hash(into:).",
    "title" : "hash(into:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Value\/object(typ:id:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "Value.object(typ:id:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeExpandMark"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypeExpandMark"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/encodeNewChanges()"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.encodeNewChanges(). ",
    "summary" : "Inherited from DocProtocol.encodeNewChanges().",
    "title" : "encodeNewChanges()"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/ObjType\/Equatable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Equatable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/SyncState\/uniffiClonePointer()"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "uniffiClonePointer()"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/UIntScalarConversionError\/helpAnchor"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from LocalizedError.helpAnchor. ",
    "summary" : "Inherited from LocalizedError.helpAnchor.",
    "title" : "helpAnchor"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/init()"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "init()"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/PathParseError\/LocalizedError-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "LocalizedError Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ReceiveSyncError\/Error-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Error Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/putObjectInList(obj:index:objType:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.putObjectInList(obj:index:objType:). ",
    "summary" : "Inherited from DocProtocol.putObjectInList(obj:index:objType:).",
    "title" : "putObjectInList(obj:index:objType:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeDecodeSyncStateError"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypeDecodeSyncStateError"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/ScalarValue"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "ScalarValue"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/LogVerbosity\/!=(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.!=(_:_:). ",
    "summary" : "Inherited from Equatable.!=(_:_:).",
    "title" : "!=(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/DocError\/failureReason"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from LocalizedError.failureReason. ",
    "summary" : "Inherited from LocalizedError.failureReason.",
    "title" : "failureReason"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/PathParseError\/helpAnchor"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from LocalizedError.helpAnchor. ",
    "summary" : "Inherited from LocalizedError.helpAnchor.",
    "title" : "helpAnchor"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypePatch\/write(_:into:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.write(_:into:). ",
    "summary" : "Inherited from FfiConverter.write(_:into:).",
    "title" : "write(_:into:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/putObjectInMap(obj:key:objType:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "putObjectInMap(obj:key:objType:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AnyCodingKey\/init(_:)-lfcr"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Creates a new schema path element from a generic coding key.  The coding key to use for internal values.",
    "summary" : "Creates a new schema path element from a generic coding key.",
    "title" : "init(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/IntScalarConversionError\/helpAnchor"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from LocalizedError.helpAnchor. ",
    "summary" : "Inherited from LocalizedError.helpAnchor.",
    "title" : "helpAnchor"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/BytesScalarConversionError\/LocalizedError-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "LocalizedError Implementations"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/transferRepresentation"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "16.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "13.0",
        "name" : "macOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "A transfer representation of an Automerge document.  Discussion Use the document’s transfer representation for system interactions that move or share data, such as the Share button, drag and drop, or copy and paste. The type associated with this representation is Automerge\/UniformTypeIdentifiers\/UTType\/automerge. If your app shares data with this type, include the type definition in your app’s Info.plist for an imported or exported type, as described in Saving, loading, and sharing Automerge documents as Data. For more information on transfer representations, see Core Transferable.",
    "summary" : "A transfer representation of an Automerge document.",
    "title" : "transferRepresentation"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Change\/timestamp"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "timestamp"
  },
  {
    "headings" : [
      "Overview",
      "Heads and change hashes",
      "Forking and Merging",
      "Getting notified of what changed"
    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ChangesAndHistory"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Track, inspect, and synchronize the changes within Automerge documents. Overview An Automerge document is a little like a git repository in that it is composed of a graph of changes, each identified by a hash. Like a git repository, a point in the history of an Automerge document can be referenced by its hash. Unlike a git repository, an Automerge document can have multiple heads for a given point in time, representing a merge of concurrent changes. Heads and change hashes From time to time you may want to refer to a particular point in the document history. For example, you may want to read values at a past point in time, or get the changes since that time. Use heads() to obtain the current heads of the document, which returns a set of ChangeHash. The set of ChangeHash that Automerge returns represent a discrete point in time for an Automerge document. Document includes families of methods that accept [ChangeHash] to retrieve values or objects from that point in time. Unlike git, Automerge does not track additional metadata about the changes over time, such as who contributed any change, or at what time the change was initially created. Forking and Merging You can create a fork a document using fork(), or forkAt(heads:) to get a fork of the document at a specific point in time. Likewise, you can merge one Document into another using merge(other:), which applies any changes from the other document. When working with multiple documents, it is important that the documents source with the same shared history, or merges (or sync) may have unpredictable, although consistent, results. To take full advantage of Automerge’s capabilities, work from forks of a single document rather than creating separate Documents, even with the same schema. Getting notified of what changed When you apply changes received from a remote document (or merged from a separate local document) you may want to know what changed within the Document, for example to update an app’s user interface. To get this detail, use receiveSyncMessageWithPatches(state:message:), which operates like Document\/receiveSyncMessage(state:message:), and additionally returns an array of patches, represented by the type Patch. Inspect a patch to see what action Automerge applied by inspecting the action property (represented by the enumeration PatchAction). The property path represents the path through the document schema to the element that was updated, represented by an array of PathElement. PathElement has an object Id (obj) property and a prop property. Prop is an enumeration that represents either a key to a dictionary and it’s value, or the index location within an array.",
    "summary" : "Track, inspect, and synchronize the changes within Automerge documents.",
    "title" : "Tracking Changes and History"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AutomergeText\/ObservableObject-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "ObservableObject Implementations"
  },
  {
    "headings" : [
      "Overview"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Mark"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A type that represents a marked range of text.  Overview Marks are annotations to text, which can be used to identify additional formatting, or other indicators relevant to the text at a specific location. The are identified by a string name and have an associated ScalarValue.",
    "summary" : "A type that represents a marked range of text.",
    "title" : "Mark"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "Doc"
  },
  {
    "headings" : [
      "Return Value"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ScalarValueRepresentable\/fromScalarValue(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Converts the Automerge representation to a local type, or returns a failure.  The Automerge ScalarValue to be converted into a local type. Return Value The local type, or an error indicating the reason for the failure to convert.",
    "summary" : "Converts the Automerge representation to a local type, or returns a failure.",
    "title" : "fromScalarValue(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeCursor_lower(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypeCursor_lower(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeCursor"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypeCursor"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeCursor\/read(from:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.read(from:). ",
    "summary" : "Inherited from FfiConverter.read(from:).",
    "title" : "read(from:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Mark\/start"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The distance from the start of the string in unicode scalars where the function starts the mark. ",
    "summary" : "The distance from the start of the string in unicode scalars where the function starts the mark.",
    "title" : "start"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AutomergeText\/init(_:doc:path:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Creates a new text reference instance bound within an Automerge document.  The Automerge document associated with this reference. A string path that represents a Text container within the Automerge document. An initial string value for the text reference.",
    "summary" : "Creates a new text reference instance bound within an Automerge document.",
    "title" : "init(_:doc:path:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Counter\/value"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The value of the counter. ",
    "summary" : "The value of the counter.",
    "title" : "value"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Value"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A type that represents a value or object managed by Automerge. ",
    "summary" : "A type that represents a value or object managed by Automerge.",
    "title" : "Value"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/deleteInMap(obj:key:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "deleteInMap(obj:key:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/CodingKeyLookupError\/recoverySuggestion"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from LocalizedError.recoverySuggestion. ",
    "summary" : "Inherited from LocalizedError.recoverySuggestion.",
    "title" : "recoverySuggestion"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/SyncState\/decode(bytes:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "decode(bytes:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/LogVerbosity\/tracing"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Logs include all debugging and additional tracing details. ",
    "summary" : "Logs include all debugging and additional tracing details.",
    "title" : "LogVerbosity.tracing"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/CodingKeyLookupError\/NoPathForSingleValue(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "No coding path was provided for encoding a single value into the Automerge document. ",
    "summary" : "No coding path was provided for encoding a single value into the Automerge document.",
    "title" : "CodingKeyLookupError.NoPathForSingleValue(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Counter\/CustomStringConvertible-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "CustomStringConvertible Implementations"
  },
  {
    "headings" : [
      "Return Value"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/path(obj:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Get the path to an object within the document.  The identifier of an array, dictionary or text object. Return Value An array of PathElement that represents the schema location of the object within the document.",
    "summary" : "Get the path to an object within the document.",
    "title" : "path(obj:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AutomergeText\/value"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The string value of the text reference in an Automerge document. ",
    "summary" : "The string value of the text reference in an Automerge document.",
    "title" : "value"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/CodingKeyLookupError\/LocalizedError-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "LocalizedError Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeChangeHash\/write(_:into:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.write(_:into:). ",
    "summary" : "Inherited from FfiConverter.write(_:into:).",
    "title" : "write(_:into:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AutomergeText\/encode(to:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Encodable.encode(to:). ",
    "summary" : "Inherited from Encodable.encode(to:).",
    "title" : "encode(to:)"
  },
  {
    "headings" : [
      "Return Value"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/cursor(obj:position:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Establish a cursor at the position you specify in the list or text object you provide.  The object identifier of the list or text object. The index position in the list, or index of the UTF-8 view in the string for a text object. Return Value A cursor that references the position you specified.",
    "summary" : "Establish a cursor at the position you specify in the list or text object you provide.",
    "title" : "cursor(obj:position:)"
  },
  {
    "headings" : [
      "Return Value"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/forkAt(heads:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Fork the document at the point in time you specify.  The set of ChangeHash that represents a point of time in the history the document. Return Value A copy of the document with a new actor ID that contains the changes up to the point in time you specify.",
    "summary" : "Fork the document at the point in time you specify.",
    "title" : "forkAt(heads:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/KeyValue\/Equatable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Equatable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/IntScalarConversionError"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A failure to convert an Automerge scalar value to or from a signed integer representation. ",
    "summary" : "A failure to convert an Automerge scalar value to or from a signed integer representation.",
    "title" : "IntScalarConversionError"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/BytesScalarConversionError\/localizedDescription"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from Error.localizedDescription. ",
    "summary" : "Inherited from Error.localizedDescription.",
    "title" : "localizedDescription"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Cursor\/Equatable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Equatable Implementations"
  },
  {
    "headings" : [
      "Overview"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ReceiveSyncError"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "An error that indicates the received synchronisation could not be applied.  Overview The error is specific to the Rust language binding infrastructure.",
    "summary" : "An error that indicates the received synchronisation could not be applied.",
    "title" : "ReceiveSyncError"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ScalarValue\/Unknown(typeCode:data:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "An unknown, raw scalar type.  Discussion This type is reserved for forward compatibility, and is not expected to be created directly.",
    "summary" : "An unknown, raw scalar type.",
    "title" : "ScalarValue.Unknown(typeCode:data:)"
  },
  {
    "headings" : [
      "Overview"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/LoadError"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "An error that indicates a problem loading the document.  Overview The error is specific to the Rust language binding infrastructure.",
    "summary" : "An error that indicates a problem loading the document.",
    "title" : "LoadError"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/SyncStateProtocol\/reset()"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "reset()"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeChange"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypeChange"
  },
  {
    "headings" : [
      "Overview"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Counter"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A type that represents the value of an Automerge counter.  Overview Counter is a reference-type that you can create without an existing Automerge document, increment, and later save into an Automerge document be encoding using AutomergeEncoder, or by calling the bind(doc:path:) function  to link the type into an existing Automerge document. As a reference type, Counter updates the underlying Automerge document when a value is explicitly set, or increment(by:) is called on the instance.",
    "summary" : "A type that represents the value of an Automerge counter.",
    "title" : "Counter"
  },
  {
    "headings" : [
      "Return Value"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Counter\/==(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns a Boolean value that indicates whether value of two counters are equal.  The first counter to compare. The second counter to compare. Return Value Returns true if equal.",
    "summary" : "Returns a Boolean value that indicates whether value of two counters are equal.",
    "title" : "==(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypePathElement_lift(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypePathElement_lift(_:)"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/updateText(obj:value:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Updates the text object with the value you specify.  The identifier of the text object to update. The string value for the text Discussion You can use updateText as an alternative to spliceText for low-level text updates. This method creates a diff of the text, using Grapheme clusters, to apply updates to change the stored text to what you provide.",
    "summary" : "Updates the text object with the value you specify.",
    "title" : "updateText(obj:value:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/mapEntriesAt(obj:heads:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "mapEntriesAt(obj:heads:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/putInMap(obj:key:value:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "putInMap(obj:key:value:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/incrementInMap(obj:key:by:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "incrementInMap(obj:key:by:)"
  },
  {
    "headings" : [
      "Overview"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ExpandMark"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A type that indicates how a mark should expand when adding characters at the ends of the mark.  Overview Typically there are two different kinds of mark: “bold” type marks, where adding text at the ends of the mark is expected to expand the mark to include the added text, and “link” type marks, where the marked text is not expected to expand when adding new characters. For more information on marks and how they expand, see the The Peritext Essay.",
    "summary" : "A type that indicates how a mark should expand when adding characters at the ends of the mark.",
    "title" : "ExpandMark"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Counter\/hash(into:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Hashable.hash(into:). ",
    "summary" : "Inherited from Hashable.hash(into:).",
    "title" : "hash(into:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/mergeWithPatches(other:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "mergeWithPatches(other:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ExpandMark\/none"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Characters added just before or just after the mark should never be added to it. ",
    "summary" : "Characters added just before or just after the mark should never be added to it.",
    "title" : "ExpandMark.none"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ChangeHash\/Equatable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Equatable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/IntScalarConversionError\/failureReason"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A localized message describing the reason for the failure. ",
    "summary" : "A localized message describing the reason for the failure.",
    "title" : "failureReason"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/spliceText(obj:start:delete:value:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Splice characters into the text object you specify.  The identifier of the text object to update. The distance from the start of the string in unicode scalars where the function begins inserting or deleting. The number of unicode scalars to delete from the start index. If negative, the function deletes characters preceding start index, rather than following it. The characters to insert after the start index. Discussion With spliceText, the start and delete parameters represent integer distances of unicode scalars of the Swift strings, not the counts of Characters (or grapheme clusters). If you use or receive a Swift String.Index convert it to an index position usable by Automerge through UnicodeScalarView, accessible through the unicodeScalars property on the string. To determine Automerge index position from a String.Index, convert the index position into a String.UnicodeScalarView.Index and calculate the distance from the startIndex value. An example of deriving the automerge start position from a Swift string’s index:  For the length of index updates in Automerge, use the count of the string’s UnicodeScalarView, converted to Int64. For example: ",
    "summary" : "Splice characters into the text object you specify.",
    "title" : "spliceText(obj:start:delete:value:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/PathParseError\/InvalidPathElement(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The path element is not valid. ",
    "summary" : "The path element is not valid.",
    "title" : "PathParseError.InvalidPathElement(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/BooleanScalarConversionError\/helpAnchor"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from LocalizedError.helpAnchor. ",
    "summary" : "Inherited from LocalizedError.helpAnchor.",
    "title" : "helpAnchor"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeObjId"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypeObjId"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/LoadError\/Internal(message:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "LoadError.Internal(message:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/PathElement\/prop"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "prop"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ScalarValue\/String(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A string. ",
    "summary" : "A string.",
    "title" : "ScalarValue.String(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/SchemaStrategy\/readonly"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Allows updating of values only. If the schema does not pre-exist in the format that the encoder expects, the lookup doesn’t create schema and captures an error for later presentation. ",
    "summary" : "Allows updating of values only. If the schema does not pre-exist in the format that the encoder expects, the lookup doesn’t create schema and captures an error for later presentation.",
    "title" : "SchemaStrategy.readonly"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DecodeSyncStateError\/localizedDescription"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from Error.localizedDescription. ",
    "summary" : "Inherited from Error.localizedDescription.",
    "title" : "localizedDescription"
  },
  {
    "headings" : [
      "Return Value",
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/getAllAt(obj:key:heads:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Get the the historical set of possibly conflicting values of the key you provide, in the dictionary object and point in time you specify.  The identifier of the dictionary object. The key within the dictionary. The set of ChangeHash that represents a point of time in the history the document. Return Value The set of value for the key at the point in time you provide, or nil if the key doesn’t exist in the dictionary. Discussion Use the method heads() to capture a specific point in time in order to use this method.",
    "summary" : "Get the the historical set of possibly conflicting values of the key you provide, in the dictionary object and point in time you specify.",
    "title" : "getAllAt(obj:key:heads:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/insertInList(obj:index:value:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "insertInList(obj:index:value:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeLoadError\/read(from:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.read(from:). ",
    "summary" : "Inherited from FfiConverter.read(from:).",
    "title" : "read(from:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/LoadError\/Equatable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Equatable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/CodingKeyLookupError\/==(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.==(_:_:). ",
    "summary" : "Inherited from Equatable.==(_:_:).",
    "title" : "==(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/receiveSyncMessage(state:msg:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "receiveSyncMessage(state:msg:)"
  }
]