{
  "abstract" : [
    {
      "text" : "Conveniently synchronize any two documents.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Sync"
  },
  "kind" : "article",
  "metadata" : {
    "modules" : [
      {
        "name" : "Automerge"
      }
    ],
    "role" : "article",
    "roleHeading" : "Article",
    "title" : "Synchronizing Automerge Documents"
  },
  "primaryContentSections" : [
    {
      "content" : [
        {
          "anchor" : "Overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "You can track the changes to documents yourself, using ",
              "type" : "text"
            },
            {
              "code" : "heads()",
              "type" : "codeVoice"
            },
            {
              "text" : " to track points in time in documents, generating changes to apply using the methods",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/encodeNewChanges()",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " and ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/encodeChangesSince(heads:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ", and applying the changes with the method ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/applyEncodedChanges(encoded:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ".",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "To make synchronization between two documents easier, Automerge provides a pair of methods that determine and track the changes needed to synchronize any two documents.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "Using ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/SyncState",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ", these methods keep the size of changes needed to synchronize to a minimum.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "anchor" : "Syncing-documents",
          "level" : 3,
          "text" : "Syncing documents",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Create an instance of ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/SyncState",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ", which represents the state of a a peer document, to start the process.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "Use ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/generateSyncMessage(state:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " to update the initial sync state and generate an initial sync message to send to the another document.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "When receiving a sync state message, use ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/receiveSyncMessage(state:message:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " to apply the patches (if any) and update the sync state tracked in ",
              "type" : "text"
            },
            {
              "code" : "SyncState",
              "type" : "codeVoice"
            },
            {
              "text" : ".",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "For example, to sync two documents, create a new instance of ",
              "type" : "text"
            },
            {
              "code" : "SyncState",
              "type" : "codeVoice"
            },
            {
              "text" : " for each document.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "Start the sync process by calling ",
              "type" : "text"
            },
            {
              "code" : "generateSyncMessage(state:)",
              "type" : "codeVoice"
            },
            {
              "text" : " to generate an initial sync message and send this message to the other document.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "On the receiving side, receive the sync message using ",
              "type" : "text"
            },
            {
              "code" : "receiveSyncMessage(state:message:)",
              "type" : "codeVoice"
            },
            {
              "text" : " to receive and apply any patches and update the sync state.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "When ever you receive a sync message, attempt to generate a return sync message with ",
              "type" : "text"
            },
            {
              "code" : "generateSyncMessage(state:)",
              "type" : "codeVoice"
            },
            {
              "text" : ".",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "Repeated this process until a call to ",
              "type" : "text"
            },
            {
              "code" : "generateSyncMessage",
              "type" : "codeVoice"
            },
            {
              "text" : " doesnâ€™t return any bytes for a sync message.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "At that point, the two documents are fully in sync.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "The following code illustrates this process with two instances of ",
              "type" : "text"
            },
            {
              "code" : "Document",
              "type" : "codeVoice"
            },
            {
              "text" : " in memory:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "let doc1 = Document()",
            "",
            "\/\/ ... make changes independently to doc1",
            "",
            "let doc2 = doc1.fork()",
            "",
            "\/\/ ... make changes independently to doc2",
            "",
            "let syncState1 = SyncState()",
            "let syncState2 = SyncState()",
            "var quiet = false",
            "while !quiet {",
            "    quiet = true",
            "",
            "    if let msg = doc1.generateSyncMessage(state: sync1) {",
            "        quiet = false",
            "        try! doc2.receiveSyncMessage(state: sync2, message: msg)",
            "    }",
            "",
            "    if let msg = doc2.generateSyncMessage(state: sync2) {",
            "        quiet = false",
            "        try! doc1.receiveSyncMessage(state: sync1, message: msg)",
            "    }",
            "}"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "seeAlsoSections" : [
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/SyncState"
      ],
      "title" : "Synchronizing Documents"
    }
  ]
, 
"references": {
"doc://com.github.automerge.automerge-swift/documentation/Automerge": {
  "abstract" : [
    {
      "text" : "Create, Update, and Synchronize data for collaborative applications.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "Automerge",
  "type" : "topic",
  "url" : "\/documentation\/automerge"
},
"doc://com.github.automerge.automerge-swift/documentation/Automerge/Document/applyEncodedChanges(encoded:)": {
  "abstract" : [
    {
      "text" : "Apply encoded changes to the document.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "applyEncodedChanges"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "encoded"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10Foundation4DataV",
      "text" : "Data"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    }
  ],
  "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/applyEncodedChanges(encoded:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "applyEncodedChanges(encoded:)",
  "type" : "topic",
  "url" : "\/documentation\/automerge\/document\/applyencodedchanges(encoded:)"
},
"doc://com.github.automerge.automerge-swift/documentation/Automerge/Document/encodeChangesSince(heads:)": {
  "abstract" : [
    {
      "text" : "Encode and return any changes made to the document between now and the point in time you specify.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "encodeChangesSince"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "heads"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sh",
      "text" : "Set"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:9Automerge10ChangeHashV",
      "text" : "ChangeHash"
    },
    {
      "kind" : "text",
      "text" : ">) "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10Foundation4DataV",
      "text" : "Data"
    }
  ],
  "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/encodeChangesSince(heads:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "encodeChangesSince(heads:)",
  "type" : "topic",
  "url" : "\/documentation\/automerge\/document\/encodechangessince(heads:)"
},
"doc://com.github.automerge.automerge-swift/documentation/Automerge/Document/encodeNewChanges()": {
  "abstract" : [
    {
      "text" : "Returns the binary encoding of the changes since the last call to this method.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "encodeNewChanges"
    },
    {
      "kind" : "text",
      "text" : "() -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10Foundation4DataV",
      "text" : "Data"
    }
  ],
  "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/encodeNewChanges()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "encodeNewChanges()",
  "type" : "topic",
  "url" : "\/documentation\/automerge\/document\/encodenewchanges()"
},
"doc://com.github.automerge.automerge-swift/documentation/Automerge/Document/generateSyncMessage(state:)": {
  "abstract" : [
    {
      "text" : "Update the sync state you provide and return a sync message to send to a peer.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "generateSyncMessage"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "state"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:9Automerge9SyncStateV",
      "text" : "SyncState"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10Foundation4DataV",
      "text" : "Data"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/generateSyncMessage(state:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "generateSyncMessage(state:)",
  "type" : "topic",
  "url" : "\/documentation\/automerge\/document\/generatesyncmessage(state:)"
},
"doc://com.github.automerge.automerge-swift/documentation/Automerge/Document/receiveSyncMessage(state:message:)": {
  "abstract" : [
    {
      "text" : "Apply the sync message to update the sync state and Automerge document with the sync message from a peer.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "receiveSyncMessage"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "state"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:9Automerge9SyncStateV",
      "text" : "SyncState"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "message"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10Foundation4DataV",
      "text" : "Data"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    }
  ],
  "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/receiveSyncMessage(state:message:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "receiveSyncMessage(state:message:)",
  "type" : "topic",
  "url" : "\/documentation\/automerge\/document\/receivesyncmessage(state:message:)"
},
"doc://com.github.automerge.automerge-swift/documentation/Automerge/SyncState": {
  "abstract" : [
    {
      "text" : "The state of a synchronisation session with another peer.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "SyncState"
    }
  ],
  "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/SyncState",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "SyncState"
    }
  ],
  "role" : "symbol",
  "title" : "SyncState",
  "type" : "topic",
  "url" : "\/documentation\/automerge\/syncstate"
}
}
}