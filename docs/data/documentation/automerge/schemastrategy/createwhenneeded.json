{
  "abstract" : [
    {
      "text" : "Creates schema where none exists, errors on schema mismatch.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge",
        "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/SchemaStrategy"
      ],
      [
        "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge",
        "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AutomergeEncoder",
        "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/SchemaStrategy"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/SchemaStrategy\/createWhenNeeded"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:9Automerge14SchemaStrategyO16createWhenNeededyA2CmF",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "case"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "createWhenNeeded"
      }
    ],
    "modules" : [
      {
        "name" : "Automerge"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Case",
    "symbolKind" : "case",
    "title" : "SchemaStrategy.createWhenNeeded"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "case"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "createWhenNeeded"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "discussion",
          "level" : 2,
          "text" : "Discussion",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Basic schema checking for containers that creates relevant objects in Automerge at the relevant path doesn’t",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "exist.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "If there is something in an existing Automerge document that doesn’t match the type of container, or if the",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "path",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "is a leaf-node",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "(a scalar value, or a Text instance), then the lookup captures the schema error for later presentation.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "seeAlsoSections" : [
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/SchemaStrategy\/readonly",
        "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/SchemaStrategy\/override"
      ],
      "title" : "Encoding Strategies"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/automerge\/schemastrategy\/createwhenneeded"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://com.github.automerge.automerge-swift/documentation/Automerge": {
  "abstract" : [
    {
      "text" : "Create, Update, and Synchronize data for collaborative applications.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "Automerge",
  "type" : "topic",
  "url" : "\/documentation\/automerge"
},
"doc://com.github.automerge.automerge-swift/documentation/Automerge/AutomergeEncoder": {
  "abstract" : [
    {
      "text" : "An encoder that stores types that conform to the codable protocol into an Automerge document.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AutomergeEncoder"
    }
  ],
  "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AutomergeEncoder",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AutomergeEncoder"
    }
  ],
  "role" : "symbol",
  "title" : "AutomergeEncoder",
  "type" : "topic",
  "url" : "\/documentation\/automerge\/automergeencoder"
},
"doc://com.github.automerge.automerge-swift/documentation/Automerge/SchemaStrategy": {
  "abstract" : [
    {
      "text" : "A type that represents the encoder strategy to establish or error on differences in existing Automerge documents",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "as compared to expected encoding.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "SchemaStrategy"
    }
  ],
  "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/SchemaStrategy",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "SchemaStrategy"
    }
  ],
  "role" : "symbol",
  "title" : "SchemaStrategy",
  "type" : "topic",
  "url" : "\/documentation\/automerge\/schemastrategy"
},
"doc://com.github.automerge.automerge-swift/documentation/Automerge/SchemaStrategy/createWhenNeeded": {
  "abstract" : [
    {
      "text" : "Creates schema where none exists, errors on schema mismatch.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "case"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "createWhenNeeded"
    }
  ],
  "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/SchemaStrategy\/createWhenNeeded",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "SchemaStrategy.createWhenNeeded",
  "type" : "topic",
  "url" : "\/documentation\/automerge\/schemastrategy\/createwhenneeded"
},
"doc://com.github.automerge.automerge-swift/documentation/Automerge/SchemaStrategy/override": {
  "abstract" : [
    {
      "text" : "Creates schema, irregardless of existing schema.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "case"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "override"
    }
  ],
  "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/SchemaStrategy\/override",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "SchemaStrategy.override",
  "type" : "topic",
  "url" : "\/documentation\/automerge\/schemastrategy\/override"
},
"doc://com.github.automerge.automerge-swift/documentation/Automerge/SchemaStrategy/readonly": {
  "abstract" : [
    {
      "text" : "Allows updating of values only.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "If the schema does not pre-exist in the format that the encoder expects, the lookup doesn’t create schema",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "and",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "captures an error for later presentation.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "case"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "readonly"
    }
  ],
  "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/SchemaStrategy\/readonly",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "SchemaStrategy.readonly",
  "type" : "topic",
  "url" : "\/documentation\/automerge\/schemastrategy\/readonly"
}
}
}