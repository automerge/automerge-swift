{
  "abstract" : [
    {
      "text" : "A quick-start guide on how to use Automerge for your iOS or macOS app.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/FiveMinuteQuickstart"
  },
  "kind" : "article",
  "metadata" : {
    "modules" : [
      {
        "name" : "Automerge"
      }
    ],
    "role" : "article",
    "roleHeading" : "Article",
    "title" : "Five Minute Quick Start"
  },
  "primaryContentSections" : [
    {
      "content" : [
        {
          "anchor" : "Overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Use an Automerge document to store and merge changes to the data.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "You can store individuals values or entire models within Automerge.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "Encode and decide any model that conforms to the ",
              "type" : "text"
            },
            {
              "identifier" : "https:\/\/developer.apple.com\/documentation\/swift\/codable",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " into an Automerge document.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "For example, the following code illustrates the model ",
              "type" : "text"
            },
            {
              "code" : "ColorList",
              "type" : "codeVoice"
            },
            {
              "text" : ", that conforms to ",
              "type" : "text"
            },
            {
              "code" : "Codable",
              "type" : "codeVoice"
            },
            {
              "text" : ", for this quick start:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "struct ColorList: Codable {",
            "    var colors: [String]",
            "}"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "See ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ModelingData",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " for more details on the types that Automerge stores and how the library exposes those types in Swift.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "anchor" : "Add-Automerge-swift-as-a-dependency",
          "level" : 3,
          "text" : "Add Automerge-swift as a dependency",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "If you’re working with a Swift package, add Automerge-swift as a dependency to Package.swift:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "let package = Package(",
            "    ...",
            "    dependencies: [",
            "        ...",
            "        .package(url: \"https:\/\/github.com\/automerge\/automerge-swift.git\", from: \"0.5.2\")",
            "    ],",
            "    targets: [",
            "        .executableTarget(",
            "            ...",
            "            dependencies: [.product(name: \"Automerge\", package: \"automerge-swift\")],",
            "            ...",
            "        )",
            "    ]",
            ")"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "If you’re working with an Xcode project, search for the swift package using the repository URL",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "code" : "github.com\/automerge\/automerge-swift",
              "type" : "codeVoice"
            },
            {
              "text" : " to add it as a dependency to iOS, macOS, or macCatalyst targets.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "anchor" : "Creating-a-Document",
          "level" : 3,
          "text" : "Creating a Document",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "The following example creates a new Automerge ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " instance and uses ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AutomergeEncoder",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " to store an instance of the ",
              "type" : "text"
            },
            {
              "code" : "ColorList",
              "type" : "codeVoice"
            },
            {
              "text" : " model into it:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "import Automerge",
            "let doc = Document()",
            "let encoder = AutomergeEncoder(doc: doc)",
            "",
            "var myColors = ColorList(colors: [\"blue\", \"red\"])",
            "try encoder.encode(myColors)"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "anchor" : "Making-Changes",
          "level" : 3,
          "text" : "Making Changes",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "As you make changes, store them into the Automerge document by encoding the updated model:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "myColors.colors.append(\"green\")",
            "try encoder.encode(myColors)",
            "",
            "print(myColors.colors)",
            "\/\/ [\"blue\", \"red\", \"green\"]"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "Automerge treats the changes you make as concurrent up until you save the document using ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/save()",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ".",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "Saving the document compacts all the recent concurrent changes.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "See ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ChangesAndHistory",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " for more information about tracking changes and a more compact way to synchronise document updates.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "anchor" : "Saving-the-Document",
          "level" : 3,
          "text" : "Saving the Document",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "In addition to compacting changes to an Automerge document, ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/save()",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " returns the entire document as a series of bytes (",
              "type" : "text"
            },
            {
              "code" : "Data",
              "type" : "codeVoice"
            },
            {
              "text" : ") that you can store locally or send over a network:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "let bytesToStore = doc.save()"
          ],
          "syntax" : null,
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "These bytes represent the entire document model stored in ",
              "type" : "text"
            },
            {
              "code" : "Document",
              "type" : "codeVoice"
            },
            {
              "text" : " and its history of updates.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "anchor" : "Forking-and-Merging-Documents",
          "level" : 3,
          "text" : "Forking and Merging Documents",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Use ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/init(_:logLevel:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " to load the bytes of an Automerge document, to create a copy of the document:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "let doc2 = try Document(bytesToStore)"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "You can also use the ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/fork()",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " to make a copy of the document in memory, without needing to store and re-load the bytes:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "let doc3 = doc.fork()"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "With a copy of the document, create an instance of ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AutomergeDecoder",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " to retrieve and decode an instance of your model:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "let doc2decoder = AutomergeDecoder(doc: doc2)",
            "var copyOfColorList = try doc2decoder.decode(ColorList.self)"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "You can then make changes to your model and encode those changes into the Automerge document to store the updates.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "copyOfColorList.colors.removeFirst()",
            "let doc2encoder = AutomergeEncoder(doc: doc2)",
            "try doc2encoder.encode(copyOfColorList)"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "Use the ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/merge(other:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " to merge changes made in the copy of the document back into the initial document:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "try doc.merge(doc2)"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "Create an instance of ",
              "type" : "text"
            },
            {
              "code" : "AutomergeDecoder",
              "type" : "codeVoice"
            },
            {
              "text" : " to decode and retrieve an instance of your model that reflects the updates stored in the Automerge document:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "let decoder = AutomergeDecoder(doc: doc)",
            "myColors = try decoder.decode(ColorList.self)",
            "",
            "print(myColors.colors)",
            "\/\/ [\"red\", \"green\"]"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "seeAlsoSections" : [
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document",
        "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AutomergeType"
      ],
      "title" : "Essentials"
    }
  ]
, 
"references": {
"doc://com.github.automerge.automerge-swift/documentation/Automerge": {
  "abstract" : [
    {
      "text" : "Create, Update, and Synchronize data for collaborative applications.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "Automerge",
  "type" : "topic",
  "url" : "\/documentation\/automerge"
},
"doc://com.github.automerge.automerge-swift/documentation/Automerge/AutomergeDecoder": {
  "abstract" : [
    {
      "text" : "A decoder that initializes codable-conforming types from an Automerge document.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AutomergeDecoder"
    }
  ],
  "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AutomergeDecoder",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AutomergeDecoder"
    }
  ],
  "role" : "symbol",
  "title" : "AutomergeDecoder",
  "type" : "topic",
  "url" : "\/documentation\/automerge\/automergedecoder"
},
"doc://com.github.automerge.automerge-swift/documentation/Automerge/AutomergeEncoder": {
  "abstract" : [
    {
      "text" : "An encoder that stores types that conform to the codable protocol into an Automerge document.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AutomergeEncoder"
    }
  ],
  "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AutomergeEncoder",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AutomergeEncoder"
    }
  ],
  "role" : "symbol",
  "title" : "AutomergeEncoder",
  "type" : "topic",
  "url" : "\/documentation\/automerge\/automergeencoder"
},
"doc://com.github.automerge.automerge-swift/documentation/Automerge/AutomergeType": {
  "abstract" : [
    {
      "text" : "Define the automerge uniform type identifier in your app to share Automerge documents.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AutomergeType",
  "kind" : "article",
  "role" : "article",
  "title" : "Importing the Automerge Type in your app",
  "type" : "topic",
  "url" : "\/documentation\/automerge\/automergetype"
},
"doc://com.github.automerge.automerge-swift/documentation/Automerge/ChangesAndHistory": {
  "abstract" : [
    {
      "text" : "Track, inspect, and synchronize the changes within Automerge documents.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ChangesAndHistory",
  "kind" : "article",
  "role" : "article",
  "title" : "Tracking Changes and History",
  "type" : "topic",
  "url" : "\/documentation\/automerge\/changesandhistory"
},
"doc://com.github.automerge.automerge-swift/documentation/Automerge/Document": {
  "abstract" : [
    {
      "text" : "An Automerge document that provides an interface to the document-structured data it contains.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Document"
    }
  ],
  "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Document"
    }
  ],
  "role" : "symbol",
  "title" : "Document",
  "type" : "topic",
  "url" : "\/documentation\/automerge\/document"
},
"doc://com.github.automerge.automerge-swift/documentation/Automerge/Document/fork()": {
  "abstract" : [
    {
      "text" : "Fork the document.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "fork"
    },
    {
      "kind" : "text",
      "text" : "() -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:9Automerge8DocumentC",
      "text" : "Document"
    }
  ],
  "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/fork()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "fork()",
  "type" : "topic",
  "url" : "\/documentation\/automerge\/document\/fork()"
},
"doc://com.github.automerge.automerge-swift/documentation/Automerge/Document/init(_:logLevel:)": {
  "abstract" : [
    {
      "text" : "Creates a new document from the data that you provide.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10Foundation4DataV",
      "text" : "Data"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "logLevel"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:9Automerge12LogVerbosityO",
      "text" : "LogVerbosity"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    }
  ],
  "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/init(_:logLevel:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(_:logLevel:)",
  "type" : "topic",
  "url" : "\/documentation\/automerge\/document\/init(_:loglevel:)"
},
"doc://com.github.automerge.automerge-swift/documentation/Automerge/Document/merge(other:)": {
  "abstract" : [
    {
      "text" : "Merge this document with another.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "merge"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "other"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:9Automerge8DocumentC",
      "text" : "Document"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    }
  ],
  "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/merge(other:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "merge(other:)",
  "type" : "topic",
  "url" : "\/documentation\/automerge\/document\/merge(other:)"
},
"doc://com.github.automerge.automerge-swift/documentation/Automerge/Document/save()": {
  "abstract" : [
    {
      "text" : "Encode the Automerge document in a compressed binary format.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "save"
    },
    {
      "kind" : "text",
      "text" : "() -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10Foundation4DataV",
      "text" : "Data"
    }
  ],
  "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/save()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "save()",
  "type" : "topic",
  "url" : "\/documentation\/automerge\/document\/save()"
},
"doc://com.github.automerge.automerge-swift/documentation/Automerge/ModelingData": {
  "abstract" : [
    {
      "text" : "Store, read, share, and synchronize complex data in an Automerge document.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ModelingData",
  "kind" : "article",
  "role" : "article",
  "title" : "Modeling Data with Automerge",
  "type" : "topic",
  "url" : "\/documentation\/automerge\/modelingdata"
},
"https://developer.apple.com/documentation/swift/codable": {
  "identifier" : "https:\/\/developer.apple.com\/documentation\/swift\/codable",
  "title" : "Codable protocol",
  "titleInlineContent" : [
    {
      "text" : "Codable protocol",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/developer.apple.com\/documentation\/swift\/codable"
}
}
}